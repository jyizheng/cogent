
./Main.hs,2970
module Main Main27,28
import import78,79
data Mode Mode116,117
data Mode = ModeAstCModeAstC116,117
          | ModeStackUsageModeStackUsage117,118
          | ModeCompilerModeCompiler118,119
          | ModeInterpreterModeInterpreter119,120
          | ModeAboutModeAbout120,121
type Verbosity Verbosity123,124
data Command Command128,129
data Command = AstCAstC128,129
             | StackUsage StackUsage129,130
             | Compile Compile130,131
             | InterpretInterpret131,132
             | CodeGenCodeGen132,133
             | ACInstallACInstall133,134
             | CorresSetupCorresSetup134,135
             | CorresProofCorresProof135,136
             | DocumentationDocumentation136,137
             | Ast Ast137,138
             | Pretty Pretty138,139
             | HsShallowHsShallow139,140
             | HsShallowTuplesHsShallowTuples140,141
             | HsFFIGenHsFFIGen141,142
             | Deep Deep142,143
             | Shallow Shallow143,144
             | ShallowTuples ShallowTuples144,145
             | SCorres SCorres145,146
             | ShallowConsts ShallowConsts146,147
             | ShallowConstsTuples ShallowConstsTuples147,148
             | TableCTypeTableCType148,149
             | TableAbsFuncMonoTableAbsFuncMono149,150
             | TableAbsTypeMonoTableAbsTypeMono150,151
             | TableShallowTableShallow151,152
             | ShallowTuplesProofShallowTuplesProof152,153
             | NormalProofNormalProof153,154
             | MonoProofMonoProof154,155
             | GraphGenGraphGen155,156
             | TypeProof TypeProof156,157
             | AllRefineAllRefine157,158
             | RootRoot158,159
             | BuildInfoBuildInfo159,160
             | All All160,161
             | CRefinement CRefinement161,162
             | FunctionalCorrectness FunctionalCorrectness162,163
             | QuickCheck QuickCheck163,164
             | StdGumDirStdGumDir164,165
             | Help Help165,166
             | VersionVersion166,167
isAstC isAstC171,172
isStackUsage isStackUsage175,176
isDeep isDeep179,180
isShallow isShallow183,184
isSCorres isSCorres188,189
isShallowConsts isShallowConsts192,193
isHelp isHelp197,198
addCommands addCommands201,202
addCommand addCommand206,207
getMode getMode213,214
ccStandalone ccStandalone221,222
checkConflicts checkConflicts225,226
setActions setActions230,231
type Flags Flags301,302
stgMsg stgMsg303,304
stgCmd stgCmd312,313
astMsg astMsg318,319
prettyMsg prettyMsg319,320
hsShallowMsg hsShallowMsg321,322
deepMsg deepMsg327,328
shallowMsg shallowMsg328,329
scorresMsg scorresMsg330,331
embeddingMsg embeddingMsg331,332
shallowFuncsMsg shallowFuncsMsg333,334
shallowConstsMsg shallowConstsMsg334,335
options options337,338
flags flags438,439
parseArgs parseArgs550,551
main main1064,1065

./Setup.hs,335
isRelease isRelease37,38
gitHash gitHash50,51
generateVersionModule generateVersionModule56,57
cogentConfigure cogentConfigure82,83
copyGumHdrs copyGumHdrs99,100
installManPage installManPage127,128
fixPkg fixPkg140,141
originalTestHook originalTestHook144,145
cogentTestHook cogentTestHook149,150
main main156,157

./test-util.hs,285
main main17,18
tests tests19,20
test1 test123,24
test2 test230,31
test3 test337,38
test4 test444,45
test5 test551,52
test6 test658,59
test7 test767,68
test8 test875,76
test9 test983,84
test10 test1091,92
check check98,99
pass pass101,102
fail fail102,103

./src/Data/Vec.hs,1248
module Data.Vec Data.Vec24,25
data Fin Fin49,50
  FZero FZero50,51
  FSuc FSuc51,52
instance Binary Binary (Fin 'Zero)57,58
  get get58,59
  put put59,60
f0 f061,62
f1 f162,63
f2 f263,64
finInt finInt65,66
data Vec Vec69,70
  Nil Nil70,71
  Cons Cons71,72
instance Functor Functor (Vec n)76,77
  fmap fmap77,78
instance Applicative Applicative (Vec 'Zero)80,81
  pure pure81,82
  _ _82,83
instance (A(Applicative (Vec n)) => Applicative (Vec (Suc n))84,85
  pure pure85,86
  fs fs86,87
instance Foldable Foldable (Vec n)88,89
  foldMap foldMap89,90
instance Traversable Traversable (Vec n)92,93
  traverse traverse93,94
(<(<++>)97,98
v v98,99
length length101,102
fromList fromList105,106
takeFromList takeFromList109,110
cvtFromList cvtFromList114,115
cvtToList cvtToList120,121
head head124,125
tail tail127,128
repeat repeat130,131
splitAt splitAt134,135
at at141,142
atList atList149,150
update update154,155
modifyAt modifyAt162,163
findIx findIx165,166
allFins allFins168,169
zipWith zipWith172,173
zip zip179,180
unzip unzip182,183
widen widen186,187
widenN widenN190,191
upshift upshift194,195
liftIdx liftIdx200,201
maxFin maxFin205,206

./src/Data/Ex.hs,69
module Data.Ex Data.Ex3,4
data Exists Exists5,6
    ExI ExI6,7

./src/Data/LeafTree.hs,564
module Data.LeafTree Data.LeafTree15,16
data LeafTree LeafTree29,30
    = Branch Branch30,31
    | Leaf Leaf31,32
instance Functor Functor LeafTree34,35
    fmap fmap36,37
instance Applicative Applicative LeafTree39,40
    pure pure40,41
    (B(Branchfs)42,43
    t@(t@43,44
    (L(Leaff)44,45
join' join'47,48
instance Monad Monad LeafTree51,52
    return return52,53
    (>(>>=)54,55
instance Foldable Foldable LeafTree57,58
    foldMap foldMap58,59
instance Traversable Traversable LeafTree63,64
    traverse traverse68,69

./src/Data/DList.hs,525
module Data.DList Data.DList12,13
data DList DList24,25
data DList a = DList DList24,25
instance Binary Binary a => Binary (DList a)27,28
empty empty30,31
cons cons33,34
fromList fromList37,38
toList toList40,41
instance Eq Eq a => Eq (DList a)43,44
  DList DList44,45
instance Ord Ord a => Ord (DList a)45,46
  DList xs _ `compare`compare46,47
instance Show Show a => Show (DList a)47,48
  showsPrec showsPrec48,49
instance (O(Ord a, Read a) => Read (DList a)49,50
  readsPrec readsPrec50,51

./src/Data/PropEq.hs,137
module Data.PropEq Data.PropEq5,6
data (:(7,8
data (:=:) )7,8
    Refl Refl8,9
data (:=:=7,8
sym sym10,11
trans trans13,14

./src/Data/Nat.hs,712
module Data.Nat Data.Nat8,9
data Nat Nat14,15
data Nat = Zero Zero14,15
data Nat = Zero | Suc Suc14,15
type family family16,17
  x x17,18
(=(=?)20,21
SZero SZero21,22
SSuc SSuc22,23
_ _23,24
data SNat SNat25,26
    SZero SZero26,27
    SSuc SSuc27,28
s0 s031,32
s1 s132,33
s2 s233,34
instance L.Pretty L-Pretty (SNat n)35,36
    pretty pretty36,37
toInt toInt42,43
sadd sadd46,47
zeroPlusNEqualsN zeroPlusNEqualsN54,55
addSucLeft addSucLeft58,59
addSucLeft' addSucLeft'62,63
sucZeroIsSuc sucZeroIsSuc66,67
assoc assoc69,70
annoying annoying73,74
annoying' annoying'78,79
withAssocSS withAssocSS84,85
withAssocS withAssocS87,88
withAssoc withAssoc90,91

./src/Cogent/CodeGen.hs,78
module Cogent.CodeGen Cogent.CodeGen14,15
cgen cgen36,37
cgen cgen45,46

./src/Cogent/TypeCheck.hs,160
module Cogent.TypeCheck Cogent.TypeCheck19,20
tc tc60,61
typecheck typecheck67,68
checkOne checkOne72,73
typecheckCustTyGen typecheckCustTyGen183,184

./src/Cogent/Reorganizer.hs,961
module Cogent.Reorganizer Cogent.Reorganizer16,17
data ReorganizeError ReorganizeError37,38
data ReorganizeError = CyclicDependencyCyclicDependency37,38
                     | DuplicateTypeDefinitionDuplicateTypeDefinition38,39
                     | DuplicateValueDefinitionDuplicateValueDefinition39,40
                     | DuplicateRepDefinitionDuplicateRepDefinition40,41
data SourceObject SourceObject42,43
data SourceObject = TypeName TypeName42,43
                  | ValName ValName43,44
                  | RepName RepName44,45
                  | DocBlock' DocBlock'45,46
instance Show Show SourceObject48,49
  show show49,50
dependencies dependencies54,55
classify classify72,73
sourceObject sourceObject76,77
prune prune87,88
graphOf graphOf110,111
dependencyGraph_ dependencyGraph_114,115
dependencyGraph dependencyGraph119,120
checkNoNameClashes checkNoNameClashes128,129
reorganize reorganize143,144

./src/Cogent/Core.hs,4088
module Cogent.Core Cogent.Core40,41
data Type Type63,64
  = TVar TVar64,65
  | TVarBang TVarBang65,66
  | TVarUnboxed TVarUnboxed66,67
  | TCon TCon67,68
  | TFun TFun68,69
  | TPrim TPrim69,70
  | TStringTString70,71
  | TSum TSum71,72
  | TProduct TProduct72,73
  | TRecord TRecord73,74
  | TUnitTUnit74,75
  | TArray TArray76,77
instance Binary Binary (Type 'Zero)83,84
data SupposedlyMonoType SupposedlyMonoType85,86
data SupposedlyMonoType = forall forall85,86
data SupposedlyMonoType = forall (t t85,86
isTVar isTVar88,89
isTFun isTFun92,93
isUnboxed isUnboxed96,97
data FunNote FunNote101,102
data FunNote = NoInline NoInline101,102
data FunNote = NoInline | InlineMe InlineMe101,102
data FunNote = NoInline | InlineMe | MacroCall MacroCall101,102
data FunNote = NoInline | InlineMe | MacroCall | InlinePlease InlinePlease101,102
data Expr Expr104,105
  = Variable Variable105,106
  | Fun Fun106,107
  | Op Op107,108
  | App App108,109
  | Con Con109,110
  | UnitUnit110,111
  | ILit ILit111,112
  | SLit SLit112,113
  | ALit ALit114,115
  | ArrayIndex ArrayIndex115,116
  | Pop Pop116,117
  | Singleton Singleton117,118
  | Let Let119,120
  | LetBang LetBang120,121
  | Tuple Tuple121,122
  | Struct Struct122,123
  | If If123,124
  | Case Case124,125
  | Esac Esac125,126
  | Split Split126,127
  | Member Member127,128
  | Take Take128,129
  | Put Put129,130
  | Promote Promote130,131
  | Cast Cast131,132
data UntypedExpr UntypedExpr140,141
data UntypedExpr t v a = E E140,141
data TypedExpr TypedExpr141,142
data TypedExpr   t v a = TE TE141,142
data TypedExpr   t v a = TE { exprType exprType141,142
data TypedExpr   t v a = TE { exprType :: Type t , exprExpr exprExpr141,142
data FunctionType FunctionType143,144
data FunctionType = forall forall143,144
data Attr Attr146,147
data Attr = Attr Attr146,147
data Attr = Attr { inlineDef inlineDef146,147
data Attr = Attr { inlineDef :: Bool, fnMacro fnMacro146,147
instance Binary Binary Attr148,149
instance Monoid Monoid Attr151,152
  mempty mempty152,153
  (Attr a1 a2) `mappend`mappend153,154
instance Semigroup Semigroup Attr155,156
  Attr Attr156,157
instance Monoid Monoid Attr157,158
  mempty mempty158,159
data Definition Definition162,163
  = forall forall163,164
type CoreConst CoreConst169,170
getDefinitionId getDefinitionId171,172
getFuncId getFuncId176,177
getTypeVarNum getTypeVarNum181,182
isDefinitionId isDefinitionId186,187
isFuncId isFuncId189,190
isAbsFun isAbsFun194,195
isConFun isConFun198,199
isTypeDef isTypeDef202,203
isAbsTyp isAbsTyp206,207
traverseE traverseE210,211
foldEPre foldEPre237,238
fmapE fmapE264,265
untypeE untypeE293,294
untypeD untypeD296,297
instance (F(Functor (e t v), Functor (e t ('Suc v)), Functor (e t ('Suc ('Suc v)))) => Functor (Flip (Expr t v) e)301,302
  fmap fmap302,303
instance Functor Functor (TypedExpr t v)327,328
  fmap fmap328,329
primop primop342,343
fieldIndex fieldIndex343,344
instance Prec Prec (Expr t v a e)347,348
  prec prec348,349
instance Prec Prec (TypedExpr t v a)367,368
  prec prec368,369
instance Prec Prec (UntypedExpr t v a)370,371
  prec prec371,372
prettyV prettyV373,374
prettyT prettyT374,375
instance Pretty Pretty a => Pretty (TypedExpr t v a)376,377
  pretty pretty377,378
instance Pretty Pretty a => Pretty (UntypedExpr t v a)380,381
  pretty pretty381,382
instance (P(Pretty a, Prec (e t v a), Pretty (e t v a), Pretty (e t ('Suc v) a), Pretty (e t ('Suc ('Suc v)) a)) => Pretty (Expr t v a e)383,384
  pretty pretty385,386
instance Pretty Pretty FunNote428,429
  pretty pretty429,430
instance Pretty Pretty (Type t)434,435
  pretty pretty435,436
prettyTaken prettyTaken454,455
instance Pretty Pretty (TyVarName, Kind)460,461
  pretty pretty464,465
instance Pretty Pretty a => Pretty (Vec t a)466,467
  pretty pretty467,468
instance Pretty Pretty (Definition e a)471,472
  pretty pretty472,473

./src/Cogent/Surface.hs,8862
module Cogent.Surface Cogent.Surface15,16
type DocString DocString33,34
type AExpr AExpr35,36
data IrrefutablePattern IrrefutablePattern37,38
data IrrefutablePattern pv ip = PVar PVar37,38
                              | PTuple PTuple38,39
                              | PUnboxedRecord PUnboxedRecord39,40
                              | PUnderscorePUnderscore40,41
                              | PUnitelPUnitel41,42
                              | PTake PTake42,43
                              | PArray PArray45,46
data Pattern Pattern49,50
data Pattern ip = PCon PCon49,50
                | PIntLit PIntLit50,51
                | PBoolLit PBoolLit51,52
                | PCharLit PCharLit52,53
                | PIrrefutable PIrrefutable53,54
data Alt Alt56,57
data Alt p e = Alt Alt56,57
data Binding Binding58,59
data Binding t p ip e = Binding Binding58,59
                      | BindingAlts BindingAlts59,60
data Inline Inline62,63
data Inline = InlineInline62,63
            | NoInlineNoInline63,64
data RepSize RepSize66,67
data RepSize = Bytes Bytes66,67
data RepSize = Bytes Int | Bits Bits66,67
data RepSize = Bytes Int | Bits Int | Add Add66,67
data RepExpr RepExpr70,71
data RepExpr = Prim Prim70,71
             | Record Record71,72
             | Variant Variant72,73
             | Offset Offset73,74
             | RepRef RepRef74,75
noRepE noRepE77,78
allRepRefs allRepRefs79,80
data RepDecl RepDecl85,86
data RepDecl = RepDecl RepDecl85,86
data RepData RepData87,88
data RepData = RepRep87,88
               { originalDecl originalDecl88,89
               , name name89,90
               , representation representation90,91
data Expr Expr93,94
data Expr t p ip e = PrimOp PrimOp93,94
                   | Var Var94,95
                   | Match Match95,96
                   | TypeApp TypeApp96,97
                   | Con Con97,98
                   | Seq Seq98,99
                   | Lam Lam99,100
                   | App App100,101
                   | Comp Comp101,102
                   | LamC LamC102,103
                   | AppC AppC103,104
                   | If If104,105
                   | MultiWayIf MultiWayIf105,106
                   | Member Member107,108
                   | UnitelUnitel108,109
                   | IntLit IntLit109,110
                   | BoolLit BoolLit110,111
                   | CharLit CharLit111,112
                   | StringLit StringLit112,113
                   | ArrayLit ArrayLit114,115
                   | ArrayIndex ArrayIndex115,116
                   | Tuple Tuple117,118
                   | UnboxedRecord UnboxedRecord118,119
                   | Let Let119,120
                   | Put Put120,121
                   | Upcast Upcast121,122
                   | Annot Annot122,123
type Banged Banged125,126
type Unboxed Unboxed126,127
type Taken Taken127,128
data Type Type129,130
                TCon TCon131,132
              | TVar TVar132,133
              | TFun TFun133,134
              | TRecord TRecord134,135
              | TVariant TVariant135,136
              | TTuple TTuple136,137
              | TUnitTUnit137,138
              | TArray TArray139,140
              | TUnbox TUnbox142,143
              | TBang TBang143,144
              | TTake TTake145,146
              | TPut TPut146,147
data Polytype Polytype149,150
data Polytype t = PT PT149,150
numOfArgs numOfArgs151,152
data TopLevel TopLevel153,154
data TopLevel t p e = Include Include153,154
                    | IncludeStd IncludeStd154,155
                    | DocBlock DocBlock155,156
                    | AbsTypeDec AbsTypeDec156,157
                    | TypeDec TypeDec157,158
                    | AbsDec AbsDec158,159
                    | FunDef FunDef159,160
                    | ConstDef ConstDef160,161
                    | RepDef RepDef161,162
absFnDeclId absFnDeclId164,165
absTyDeclId absTyDeclId168,169
data LocExpr LocExpr173,174
data LocExpr = LocExpr LocExpr173,174
data LocExpr = LocExpr { posOfE posOfE173,174
data LocExpr = LocExpr { posOfE :: SourcePos, exprOfLE exprOfLE173,174
data LocPatn LocPatn174,175
data LocPatn = LocPatn LocPatn174,175
data LocPatn = LocPatn { posOfP posOfP174,175
data LocPatn = LocPatn { posOfP :: SourcePos, patnOfLP patnOfLP174,175
data LocIrrefPatn LocIrrefPatn175,176
data LocIrrefPatn = LocIrrefPatn LocIrrefPatn175,176
data LocIrrefPatn = LocIrrefPatn { posOfIP posOfIP175,176
data LocIrrefPatn = LocIrrefPatn { posOfIP :: SourcePos, irpatnOfLIP irpatnOfLIP175,176
data LocType LocType176,177
data LocType = LocType LocType176,177
data LocType = LocType { posOfT posOfT176,177
data LocType = LocType { posOfT :: SourcePos, typeOfLT' typeOfLT'176,177
             | Documentation Documentation177,178
typeOfLT typeOfLT179,180
posOfLT posOfLT182,183
data RawType RawType185,186
data RawType = RT RT185,186
data RawType = RT { unRT unRT185,186
data RawExpr RawExpr186,187
data RawExpr = RE RE186,187
data RawExpr = RE { unRE unRE186,187
data RawPatn RawPatn187,188
data RawPatn = RP RP187,188
data RawPatn = RP { unRP unRP187,188
data RawIrrefPatn RawIrrefPatn188,189
data RawIrrefPatn = RIP RIP188,189
data RawIrrefPatn = RIP { unRIP unRIP188,189
instance Foldable Foldable (Flip Alt e)192,193
  foldMap foldMap193,194
instance Foldable Foldable (Flip (Binding t p) e)195,196
  foldMap foldMap196,197
instance Foldable Foldable (Flip2 (Binding t) e ip)197,198
  foldMap foldMap198,199
instance Foldable Foldable (Flip3 Binding e ip p)199,200
  foldMap foldMap200,201
instance Foldable Foldable (Flip (Expr t p) e)202,203
  foldMap foldMap203,204
instance Foldable Foldable (Flip2 (Expr t) e ip)204,205
  foldMap foldMap205,206
instance Foldable Foldable (Flip3 Expr e ip p)206,207
  foldMap foldMap207,208
instance Foldable Foldable (Flip IrrefutablePattern pv)209,210
  foldMap foldMap210,211
instance Foldable Foldable (Flip Type t)212,213
  foldMap foldMap213,214
instance Foldable Foldable (Flip (TopLevel t) e)215,216
  foldMap foldMap216,217
instance Foldable Foldable (Flip2 TopLevel p e)217,218
  foldMap foldMap218,219
instance Traversable Traversable (Flip Alt e)220,221
  traverse traverse221,222
instance Traversable Traversable (Flip (Binding t p) e)223,224
  traverse traverse224,225
instance Traversable Traversable (Flip2 (Binding t) e ip)226,227
  traverse traverse227,228
instance Traversable Traversable (Flip3 Binding e ip p)229,230
  traverse traverse230,231
instance Traversable Traversable (Flip (Expr t p) e)233,234
  traverse traverse234,235
instance Traversable Traversable (Flip2 (Expr t) e ip)263,264
  traverse traverse264,265
instance Traversable Traversable (Flip3 Expr e ip p)293,294
  traverse traverse294,295
instance Traversable Traversable (Flip IrrefutablePattern ip)324,325
  traverse traverse325,326
instance Traversable Traversable (Flip Type t)335,336
  traverse traverse336,337
instance Traversable Traversable (Flip (TopLevel t) e)351,352
  traverse traverse352,353
instance Traversable Traversable (Flip2 TopLevel e p)361,362
  traverse traverse362,363
instance Functor Functor (Flip (Binding t p) e)372,373
  fmap fmap373,374
instance Functor Functor (Flip2 (Binding t) e ip)374,375
  fmap fmap375,376
instance Functor Functor (Flip3 Binding e ip p)376,377
  fmap fmap377,378
instance Functor Functor (Flip Alt e)379,380
  fmap fmap380,381
instance Functor Functor (Flip (Expr t p) e)382,383
  fmap fmap383,384
instance Functor Functor (Flip2 (Expr t) e ip)384,385
  fmap fmap385,386
instance Functor Functor (Flip3 Expr e ip p)386,387
  fmap fmap387,388
instance Functor Functor (Flip IrrefutablePattern ip)389,390
  fmap fmap390,391
instance Functor Functor (Flip Type e)392,393
  fmap fmap393,394
instance Functor Functor (Flip (TopLevel t) e)395,396
  fmap fmap396,397
instance Functor Functor (Flip2 TopLevel e p)397,398
  fmap fmap398,399
fvA fvA402,403
fvB fvB406,407
fvP fvP410,411
fvIP fvIP415,416
fvE fvE425,426
fvT fvT441,442
fcA fcA457,458
fcB fcB460,461
fcE fcE464,465
fcT fcT470,471
tvT tvT477,478
tvE tvE493,494
tvB tvB524,525
tvA tvA528,529
stripLocT stripLocT533,534
stripLocP stripLocP536,537
stripLocIP stripLocIP539,540
stripLocE stripLocE542,543
noPos noPos545,546
dummyLocT dummyLocT548,549
dummyLocP dummyLocP551,552
dummyLocIP dummyLocIP554,555
dummyLocE dummyLocE557,558
stripAllLoc stripAllLoc560,561
rawToLocT rawToLocT563,564
rawToLocP rawToLocP566,567
rawToLocIP rawToLocIP569,570
rawToLocE rawToLocE572,573

./src/Cogent/PrettyPrint.hs,7999
module Cogent.PrettyPrint Cogent.PrettyPrint21,22
position position58,59
err err59,60
errbd errbd60,61
warn warn61,62
comment comment62,63
context context63,64
context' context'64,65
varname varname68,69
letbangvar letbangvar69,70
primop primop70,71
keyword keyword71,72
literal literal72,73
reprname reprname73,74
typevar typevar74,75
typename typename75,76
typesymbol typesymbol76,77
funname funname77,78
funname' funname'78,79
fieldname fieldname79,80
tagname tagname80,81
symbol symbol81,82
kindsig kindsig82,83
typeargs typeargs83,84
array array85,86
record record86,87
variant variant87,88
indentation indentation91,92
indent indent94,95
indent' indent'95,96
tupled tupled98,99
tupled1 tupled1100,101
spaceList spaceList103,104
commaList commaList104,105
associativity associativity110,111
class Prec Prec117,118
  prec prec118,119
instance Prec Prec ()120,121
  prec prec121,122
instance Prec Prec Associativity123,124
  prec prec124,125
instance Prec Prec (Expr t p ip e)129,130
  prec prec131,132
instance Prec Prec RawExpr167,168
  prec prec168,169
instance Prec Prec (TExpr t)170,171
  prec prec171,172
instance Prec Prec SExpr173,174
  prec prec174,175
instance Prec Prec Constraint178,179
  prec prec179,180
prettyPrec prettyPrec186,187
class ExprType ExprType192,193
  isVar isVar193,194
instance ExprType ExprType (Expr t p ip e)195,196
  isVar isVar196,197
instance ExprType ExprType RawExpr199,200
  isVar isVar200,201
instance ExprType ExprType (TExpr t)202,203
  isVar isVar203,204
instance ExprType ExprType SExpr205,206
  isVar isVar206,207
class PatnType PatnType211,212
  isPVar isPVar212,213
  prettyP prettyP213,214
  prettyB prettyB214,215
instance (P(PrettyName pv, PatnType ip, Pretty ip) => PatnType (IrrefutablePattern pv ip)216,217
  isPVar isPVar217,218
  prettyP prettyP220,221
  prettyB prettyB223,224
instance PatnType PatnType RawIrrefPatn230,231
  isPVar isPVar231,232
  prettyP prettyP232,233
  prettyB prettyB233,234
instance PatnType PatnType LocIrrefPatn235,236
  isPVar isPVar236,237
  prettyP prettyP237,238
  prettyB prettyB238,239
instance (P(Pretty t) => PatnType (TIrrefPatn t)240,241
  isPVar isPVar241,242
  prettyP prettyP242,243
  prettyB prettyB243,244
instance (P(PatnType ip, Pretty ip) => PatnType (Pattern ip)245,246
  isPVar isPVar246,247
  prettyP prettyP249,250
  prettyB prettyB252,253
instance PatnType PatnType RawPatn257,258
  isPVar isPVar258,259
  prettyP prettyP259,260
  prettyB prettyB260,261
instance PatnType PatnType LocPatn262,263
  isPVar isPVar263,264
  prettyP prettyP264,265
  prettyB prettyB265,266
instance (P(Pretty t) => PatnType (TPatn t)267,268
  isPVar isPVar268,269
  prettyP prettyP269,270
  prettyB prettyB270,271
class TypeType TypeType274,275
  isCon isCon275,276
  isTakePut isTakePut276,277
  isFun isFun277,278
  isAtomic isAtomic278,279
instance TypeType TypeType (Type e t)280,281
  isCon isCon281,282
  isFun isFun283,284
  isTakePut isTakePut285,286
  isAtomic isAtomic288,289
instance TypeType TypeType RawType294,295
  isCon isCon295,296
  isTakePut isTakePut296,297
  isFun isFun297,298
  isAtomic isAtomic298,299
instance TypeType TypeType TCType300,301
  isCon isCon301,302
  isFun isFun303,304
  isTakePut isTakePut305,306
  isAtomic isAtomic307,308
class PrettyName PrettyName312,313
  prettyName prettyName313,314
  isName isName314,315
instance PrettyName PrettyName VarName316,317
  prettyName prettyName317,318
  isName isName318,319
instance Pretty Pretty t => PrettyName (VarName, t)320,321
  prettyName prettyName321,322
  isName isName323,324
instance Pretty Pretty Word32329,330
  pretty pretty330,331
instance Pretty Pretty Likelihood332,333
  pretty pretty333,334
instance (P(PrettyName pv, PatnType ip, Pretty ip) => Pretty (IrrefutablePattern pv ip)337,338
  pretty pretty338,339
instance Pretty Pretty RawIrrefPatn348,349
  pretty pretty349,350
instance Pretty Pretty LocIrrefPatn351,352
  pretty pretty352,353
instance Pretty Pretty t => Pretty (TIrrefPatn t)354,355
  pretty pretty355,356
instance (P(PatnType ip, Pretty ip) => Pretty (Pattern ip)357,358
  pretty pretty358,359
instance Pretty Pretty RawPatn366,367
  pretty pretty367,368
instance Pretty Pretty LocPatn369,370
  pretty pretty370,371
instance Pretty Pretty t => Pretty (TPatn t)372,373
  pretty pretty373,374
instance (P(Pretty t, PatnType ip, PatnType p, Pretty p, Pretty e, Prec e) => Pretty (Binding t p ip e)375,376
  pretty pretty376,377
instance (P(Pretty p, Pretty e) => Pretty (Alt p e)384,385
  pretty pretty385,386
prettyA prettyA387,388
instance Pretty Pretty Inline394,395
  pretty pretty395,396
instance (E(ExprType e, Prec e, Pretty t, PatnType p, Pretty p, PatnType ip, Pretty ip, Pretty e) => Pretty (Expr t p ip e)398,399
  pretty pretty400,401
instance Pretty Pretty RawExpr459,460
  pretty pretty460,461
instance Pretty Pretty t => Pretty (TExpr t)462,463
  pretty pretty463,464
instance Pretty Pretty SExpr466,467
  pretty pretty467,468
prettyT' prettyT'470,471
instance (P(Pretty t, TypeType t, Pretty e) => Pretty (Type e t)474,475
  pretty pretty475,476
instance Pretty Pretty RawType518,519
  pretty pretty519,520
instance Pretty Pretty TCType521,522
  pretty pretty522,523
instance Pretty Pretty LocType533,534
  pretty pretty534,535
renderPolytypeHeader renderPolytypeHeader536,537
instance Pretty Pretty t => Pretty (Polytype t)540,541
  pretty pretty541,542
renderTypeDecHeader renderTypeDecHeader544,545
prettyFunDef prettyFunDef547,548
prettyConstDef prettyConstDef553,554
instance (P(Pretty t, Pretty p, Pretty e) => Pretty (TopLevel t p e)556,557
  pretty pretty557,558
instance Pretty Pretty Kind569,570
  pretty pretty570,571
instance Pretty Pretty SourcePos575,576
  pretty pretty576,577
instance Pretty Pretty RepDecl579,580
  pretty pretty580,581
instance Pretty Pretty RepSize582,583
  pretty pretty583,584
instance Pretty Pretty RepExpr587,588
  pretty pretty588,589
instance Pretty Pretty Metadata596,597
  pretty pretty597,598
instance Pretty Pretty FuncOrVar628,629
  pretty pretty629,630
instance Pretty Pretty TypeError633,634
  pretty pretty634,635
instance Pretty Pretty TypeWarning694,695
  pretty pretty695,696
instance Pretty Pretty TcLog701,702
  pretty pretty702,703
instance Pretty Pretty VarOrigin704,705
  pretty pretty705,706
analyseLeftover analyseLeftover708,709
analyseLeftover analyseLeftover728,729
  pretty (F t) = pretty t & (if __cogent_fdisambiguate_pp then (<+> comment "{- F -}")"738,739
instance Pretty Pretty Constraint747,748
  pretty pretty748,749
prettyC prettyC767,768
prettyCPrec prettyCPrec774,775
instance Pretty Pretty SourceObject778,779
  pretty pretty779,780
instance Pretty Pretty ReorganizeError783,784
  pretty pretty784,785
instance Pretty Pretty Subst789,790
  pretty pretty790,791
instance Pretty Pretty AssignResult792,793
  pretty pretty793,794
instance Pretty Pretty (Sigil r)797,798
  pretty pretty798,799
instance (P(Pretty t) => Pretty (Row-Row t)801,802
  pretty pretty802,803
instance Pretty Pretty Assignment811,812
  pretty pretty812,813
instance Pretty Pretty a => Pretty (I-IntMap a)814,815
  pretty pretty815,816
instance Pretty Pretty RepError818,819
  pretty pretty819,820
instance Pretty Pretty RepContext831,832
  pretty pretty832,833
instance Pretty Pretty R-Representation837,838
  pretty pretty838,839
nth nth851,852
ordinalOf ordinalOf854,855
prettyCtx prettyCtx868,869
handleTakeAssign handleTakeAssign907,908
handlePutAssign handlePutAssign912,913
prettyTWE prettyTWE922,923
prettyRE prettyRE927,928
prettyPrint prettyPrint932,933

./src/Cogent/Quote.hs,96
module Cogent.Quote Cogent.Quote12,13
cogent cogent22,23
parseCogentTl parseCogentTl29,30

./src/Cogent/C/Compile.hs,4028
module Cogent.C.Compile Cogent.C.Compile40,41
type FunClass FunClass96,97
type VarPool VarPool97,98
type GenRead GenRead98,99
data GenState GenState100,101
data GenState  = GenState GenState100,101
data GenState  = GenState { _cTypeDefs _cTypeDefs100,101
                          , _cTypeDefMap _cTypeDefMap101,102
                          , _typeSynonyms _typeSynonyms102,103
                          , _typeCorres _typeCorres103,104
                          , _absTypes _absTypes105,106
                          , _custTypeGen _custTypeGen106,107
                          , _funClasses _funClasses107,108
                          , _localOracle _localOracle108,109
                          , _globalOracle _globalOracle109,110
                          , _varPool _varPool110,111
                          , _ffiFuncs _ffiFuncs111,112
instance Binary Binary GenState117,118
recycleVars recycleVars121,122
mergePools mergePools128,129
intersectPools intersectPools131,132
u32 u32138,139
primCId primCId148,149
likely likely155,156
unlikely unlikely158,159
variable variable161,162
mkBoolLit mkBoolLit164,165
true true167,168
mkConst mkConst170,171
strDot' strDot'176,177
strArrow' strArrow'180,181
strDot strDot183,184
strArrow strArrow186,187
mkArrIdx mkArrIdx189,190
isTrivialCExpr isTrivialCExpr192,193
isTrivialCInitializer isTrivialCInitializer210,211
isTrivialCDesignator isTrivialCDesignator214,215
tagsT, fieldTag fieldTag226,227
tagsT,tagsT226,227
fieldTag fieldTag228,229
tagEnum tagEnum229,230
variantT variantT231,232
mkVariantTT mkVariantTT235,236
argOf argOf240,241
retOf retOf241,242
unitT, dummyField dummyField243,244
unitT,unitT243,244
dummyField dummyField245,246
boolT, boolField boolField247,248
boolT,boolT247,248
boolField boolField249,250
funEnum funEnum251,252
untypedFuncEnum untypedFuncEnum252,253
funDispatch funDispatch253,254
funMacro funMacro254,255
funDispMacro funDispMacro255,256
letbangTrue letbangTrue258,259
letTrue letTrue259,260
p1, p2 p2261,262
p1,p1261,262
p2 p2263,264
newtype Gen Gen275,276
newtype Gen v a = Gen { runGen runGen275,276
genEnum genEnum281,282
genBool genBool292,293
genUnit genUnit297,298
genLetTrueEnum genLetTrueEnum301,302
genFunClasses genFunClasses307,308
genFunDispatch genFunDispatch325,326
genTyDecl genTyDecl355,356
genTySynDecl genTySynDecl372,373
freshLocalCId freshLocalCId375,376
freshGlobalCId freshGlobalCId378,379
lookupStrlTypeCId lookupStrlTypeCId381,382
getStrlTypeCId getStrlTypeCId385,386
instance Monad Monad (Compose (Gen v) Maybe)400,401
  return return401,402
  (C(Composema)402,403
lookupTypeCId lookupTypeCId405,406
typeCId typeCId438,439
genType genType513,514
genTypeA genTypeA526,527
genTypeP genTypeP531,532
genTypeALit genTypeALit537,538
lookupType lookupType543,544
addSynonym addSynonym553,554
assign assign560,561
declare declare572,573
declareInit declareInit588,589
declareG declareG599,600
maybeAssign maybeAssign628,629
maybeDecl maybeDecl635,636
aNewVar aNewVar640,641
withBindings withBindings645,646
likelihood likelihood648,649
genOp genOp653,654
genExpr_ genExpr_696,697
genExpr genExpr702,703
insertSetMap insertSetMap1032,1033
fnSpecStaticInline fnSpecStaticInline1036,1037
fnSpecAttr fnSpecAttr1037,1038
fnSpecKind fnSpecKind1038,1039
fnSpecAttrConst fnSpecAttrConst1041,1042
fnSpecAttrPure fnSpecAttrPure1042,1043
genFfiFunc genFfiFunc1047,1048
genDefinition genDefinition1076,1077
compile compile1130,1131
compile compile1144,1145
printATM printATM1188,1189
newtype TableCTypes TableCTypes1196,1197
table table1198,1199
printCTable printCTable1201,1202
instance PP.Pretty PP-Pretty (CId, CC-Type 'Zero)1206,1207
  pretty pretty1210,1211
kindcheck kindcheck1216,1217
isTypeLinear isTypeLinear1218,1219
isTypeInKinds isTypeInKinds1221,1222
isTypeHasKind isTypeHasKind1224,1225

./src/Cogent/C/Syntax.hs,5003
module Cogent.C.Syntax Cogent.C.Syntax22,23
type CId CId35,36
data CIntType CIntType37,38
data CIntType = CCharT CCharT37,38
data CIntType = CCharT | CShortT CShortT37,38
data CIntType = CCharT | CShortT | CIntT CIntT37,38
data CIntType = CCharT | CShortT | CIntT | CLongT CLongT37,38
data CIntType = CCharT | CShortT | CIntT | CLongT | CLongLongTCLongLongT37,38
instance Binary Binary CIntType40,41
data CArraySize CArraySize42,43
data CArraySize = CArraySize CArraySize42,43
                | CNoArraySizeCNoArraySize43,44
                | CPtrToArrayCPtrToArray44,45
instance Binary Binary CArraySize47,48
data CType CType50,51
data CType = CInt CInt50,51
           | CogentPrim CogentPrim51,52
           | CBool CBool52,53
           | CCharCChar53,54
           | CStruct CStruct54,55
           | CUnion CUnion55,56
           | CEnum CEnum56,57
           | CPtr CPtr57,58
           | CArray CArray58,59
           | CIdent CIdent60,61
           | CFunction CFunction61,62
           | CVoidCVoid62,63
instance Binary Binary CType65,66
data Radix Radix67,68
data Radix = BIN BIN67,68
data Radix = BIN | OCT OCT67,68
data Radix = BIN | OCT | DEC DEC67,68
data Radix = BIN | OCT | DEC | HEXHEX67,68
instance Binary Binary Radix70,71
data CLitConst CLitConst72,73
data CLitConst = CNumConst CNumConst72,73
               | CCharConst CCharConst73,74
               | CStringConst CStringConst74,75
instance Binary Binary CLitConst77,78
data CExpr CExpr79,80
data CExpr = CBinOp CBinOp79,80
           | CUnOp CUnOp80,81
           | CCondExpr CCondExpr81,82
           | CConst CConst82,83
           | CVar CVar83,84
           | CStructDot CStructDot84,85
           | CArrayDeref CArrayDeref85,86
           | CDeref CDeref86,87
           | CAddrOf CAddrOf87,88
           | CTypeCast CTypeCast88,89
           | CSizeof CSizeof89,90
           | CSizeofTy CSizeofTy90,91
           | CEFnCall CEFnCall91,92
           | CCompLit CCompLit92,93
           | CMKBOOL CMKBOOL94,95
instance Binary Binary CExpr97,98
data CInitializer CInitializer99,100
data CInitializer = CInitE CInitE99,100
                  | CInitList CInitList100,101
instance Binary Binary CInitializer103,104
data CDesignator CDesignator105,106
data CDesignator = CDesignE CDesignE105,106
                 | CDesignFld CDesignFld106,107
instance Binary Binary CDesignator109,110
type CBinOp CBinOp111,112
type CUnOp CUnOp112,113
instance Binary Binary C-BinOp119,120
instance Binary Binary C-UnOp120,121
data CStmt CStmt124,125
data CStmt = CAssign CAssign124,125
           | CAssignFnCall CAssignFnCall125,126
           | CBlock CBlock128,129
           | CWhile CWhile129,130
           | CReturn CReturn131,132
           | CReturnFnCall CReturnFnCall132,133
           | CBreakCBreak133,134
           | CContinueCContinue134,135
           | CIfStmt CIfStmt135,136
           | CSwitch CSwitch136,137
           | CEmptyStmtCEmptyStmt137,138
           | CComment CComment140,141
data CBlockItem CBlockItem143,144
data CBlockItem = CBIStmt CBIStmt143,144
                | CBIDecl CBIDecl144,145
data FnSpec FnSpec147,148
data FnSpec = FnSpec FnSpec147,148
noFnSpec noFnSpec149,150
staticInlineFnSpec staticInlineFnSpec150,151
data Storage Storage152,153
data Storage  = STStatic STStatic152,153
data Storage  = STStatic | STRegister STRegister152,153
data Storage  = STStatic | STRegister | STAuto STAuto152,153
data Storage  = STStatic | STRegister | STAuto   | STExtern STExtern152,153
data TypeQual TypeQual153,154
data TypeQual = TQConst TQConst153,154
data TypeQual = TQConst  | TQVolatile TQVolatile153,154
data TypeQual = TQConst  | TQVolatile | TQInline TQInline153,154
data TypeQual = TQConst  | TQVolatile | TQInline | TQRestrict TQRestrict153,154
data GccAttrs GccAttrs154,155
data GccAttrs = GccAttrs GccAttrs154,155
data GccAttr GccAttr155,156
data GccAttr  = GccAttr GccAttr155,156
data INDIND158,159
data EXDEXD160,161
data CDeclaration CDeclaration162,163
  CVarDecl CVarDecl164,165
  CStructDecl CStructDecl166,167
  CTypeDecl CTypeDecl168,169
  CExtFnDecl CExtFnDecl169,170
  CExtFnDecl  :: { retType retType169,170
                   name name170,171
                   params params171,172
                   specs specs172,173
  CEnumDecl CEnumDecl173,174
data CExtDecl CExtDecl176,177
data CExtDecl = CFnDefn CFnDefn176,177
              | CDecl CDecl177,178
              | CMacro CMacro178,179
              | CFnMacro CFnMacro179,180
data StrlType StrlType185,186
data StrlType = Record Record185,186
              | Product Product186,187
              | Variant Variant187,188
              | Function Function188,189
              | AbsType AbsType189,190
              | Array Array190,191
instance Binary Binary StrlType193,194

./src/Cogent/C/Render.hs,908
module Cogent.C.Render Cogent.C.Render21,22
render render43,44
instance IsString IsString C-Id67,68
  fromString fromString68,69
cId cId72,73
cType cType75,76
cFieldGroup cFieldGroup78,79
cInitializer cInitializer83,84
cFieldGroups cFieldGroups87,88
isCTypeSigned isCTypeSigned92,93
cLitConst cLitConst97,98
cDesignator cDesignator108,109
cDesignators cDesignators112,113
cDesignatedInitr cDesignatedInitr116,117
cExpr cExpr119,120
mkDeclSpec mkDeclSpec136,137
cSign cSign139,140
splitCType splitCType143,144
cFnSpecOnDeclSpec cFnSpecOnDeclSpec171,172
cFnSpecOnType cFnSpecOnType176,177
cStorage cStorage180,181
cTypeQual cTypeQual186,187
cAttrs cAttrs192,193
cAttr cAttr195,196
cDeclaration cDeclaration198,199
cParam cParam208,209
cParam' cParam'211,212
cStmt cStmt215,216
cAlt cAlt230,231
cBlockItem cBlockItem234,235
cExtDecl cExtDecl238,239

./src/Cogent/TypeCheck/Generator.hs,1052
module Cogent.TypeCheck.GeneratorCogent.TypeCheck.Generator19,20
data GenState GenState58,59
data GenState = GenState GenState58,59
data GenState = GenState { _context _context58,59
                         , _knownTypeVars _knownTypeVars59,60
                         , _flexes _flexes60,61
                         , _flexOrigins _flexOrigins61,62
type CG CG66,67
runCG runCG68,69
validateType validateType78,79
validateTypes validateTypes111,112
cgFunDef cgFunDef118,119
cgAlts cgAlts127,128
cgMany cgMany154,155
cg cg164,165
cg' cg'170,171
  | o `elem`elem172,173
cg' cg'187,188
matchA matchA494,495
matchA' matchA'500,501
match match537,538
match' match'543,544
freshTVar freshTVar629,630
freshEVar freshEVar638,639
integral integral647,648
dropConstraintFor dropConstraintFor650,651
parallel' parallel'653,654
parallel parallel656,657
withBindings withBindings676,677
letBang letBang726,727
validateVariable validateVariable741,742
prettyE prettyE751,752
prettyIP prettyIP757,758

./src/Cogent/TypeCheck/Base.hs,10496
module Cogent.TypeCheck.Base Cogent.TypeCheck.Base19,20
data TypeError TypeError57,58
data TypeError = FunctionNotFound FunctionNotFound57,58
               | TooManyTypeArguments TooManyTypeArguments58,59
               | NotInScope NotInScope59,60
               | DuplicateVariableInPattern DuplicateVariableInPattern60,61
               | DifferingNumberOfConArgs DifferingNumberOfConArgs61,62
               | UnknownTypeVariable UnknownTypeVariable63,64
               | UnknownTypeConstructor UnknownTypeConstructor64,65
               | TypeArgumentMismatch TypeArgumentMismatch65,66
               | TypeMismatch TypeMismatch66,67
               | RequiredTakenField RequiredTakenField67,68
               | TypeNotShareable TypeNotShareable68,69
               | TypeNotEscapable TypeNotEscapable69,70
               | TypeNotDiscardable TypeNotDiscardable70,71
               | PatternsNotExhaustive PatternsNotExhaustive71,72
               | UnsolvedConstraint UnsolvedConstraint72,73
               | RecordWildcardsNotSupportedRecordWildcardsNotSupported73,74
               | NotAFunctionType NotAFunctionType74,75
               | DuplicateRecordFields DuplicateRecordFields75,76
               | DuplicateTypeVariable DuplicateTypeVariable76,77
               | SuperfluousTypeVariable SuperfluousTypeVariable77,78
               | TakeFromNonRecordOrVariant TakeFromNonRecordOrVariant78,79
               | PutToNonRecordOrVariant PutToNonRecordOrVariant79,80
               | TakeNonExistingField TakeNonExistingField80,81
               | PutNonExistingField PutNonExistingField81,82
               | DiscardWithoutMatch DiscardWithoutMatch82,83
               | RequiredTakenTag RequiredTakenTag83,84
               | ArithConstraintsUnsatisfiable ArithConstraintsUnsatisfiable85,86
               | CustTyGenIsPolymorphic CustTyGenIsPolymorphic87,88
               | CustTyGenIsSynonym CustTyGenIsSynonym88,89
               | TypeWarningAsError TypeWarningAsError89,90
               | RepError RepError90,91
isWarnAsError isWarnAsError93,94
data TypeWarning TypeWarning97,98
data TypeWarning = UnusedLocalBind UnusedLocalBind97,98
                 | TakeTakenField TakeTakenField98,99
                 | PutUntakenField PutUntakenField99,100
type TcLog TcLog102,103
type ContextualisedTcLog ContextualisedTcLog103,104
data ErrorContext ErrorContext106,107
data ErrorContext = InExpression InExpression106,107
                  | InPattern InPattern107,108
                  | InIrrefutablePattern InIrrefutablePattern108,109
                  | ThenBranch ThenBranch109,110
                  | ThenBranch | ElseBranchElseBranch109,110
                  | NthBranch NthBranch110,111
                  | SolvingConstraint SolvingConstraint111,112
                  | NthAlternative NthAlternative112,113
                  | InDefinition InDefinition113,114
                  | AntiquotedType AntiquotedType114,115
                  | AntiquotedExpr AntiquotedExpr115,116
                  | InAntiquotedCDefn InAntiquotedCDefn116,117
                  | CustomisedCodeGen CustomisedCodeGen117,118
instance Ord Ord ErrorContext120,121
  compare compare121,122
isCtxConstraint isCtxConstraint123,124
data VarOrigin VarOrigin127,128
data VarOrigin = ExpressionAt ExpressionAt127,128
               | BoundOf BoundOf128,129
               | EqualIn EqualIn129,130
data Metadata Metadata138,139
data Metadata = Reused Reused138,139
data Metadata = Reused { varName varName138,139
data Metadata = Reused { varName :: VarName, boundAt boundAt138,139
data Metadata = Reused { varName :: VarName, boundAt :: SourcePos, usedAt usedAt138,139
              | Unused Unused139,140
              | Unused { varName varName139,140
              | Unused { varName :: VarName, boundAt boundAt139,140
              | UnusedInOtherBranch UnusedInOtherBranch140,141
              | UnusedInOtherBranch { varName varName140,141
              | UnusedInOtherBranch { varName :: VarName, boundAt boundAt140,141
              | UnusedInOtherBranch { varName :: VarName, boundAt :: SourcePos, usedAt usedAt140,141
              | UnusedInThisBranch UnusedInThisBranch141,142
              | UnusedInThisBranch  { varName varName141,142
              | UnusedInThisBranch  { varName :: VarName, boundAt boundAt141,142
              | UnusedInThisBranch  { varName :: VarName, boundAt :: SourcePos, usedAt usedAt141,142
              | SuppressedSuppressed142,143
              | UsedInMember UsedInMember143,144
              | UsedInMember { fieldName fieldName143,144
              | UsedInArrayIndexingUsedInArrayIndexing145,146
              | UsedInLetBangUsedInLetBang147,148
              | TypeParam TypeParam148,149
              | TypeParam { functionName functionName148,149
              | TypeParam { functionName :: FunName, typeVarName typeVarName148,149
              | ImplicitlyTakenImplicitlyTaken149,150
              | Constant Constant150,151
              | Constant { constName constName150,151
(>(>:)153,154
data Constraint' Constraint'155,156
data Constraint' t = (:(155,156
                   | Upcastable Upcastable158,159
                   | Share Share159,160
                   | Drop Drop160,161
                   | Escape Escape161,162
                   | (:(162,163
                   | Unsat Unsat163,164
                   | SemiSat SemiSat164,165
                   | SatSat165,166
                   | Exhaustive Exhaustive166,167
                   | Solved Solved167,168
                   | IsPrimType IsPrimType168,169
                   | Arith Arith170,171
type Constraint Constraint173,174
arithTCType arithTCType176,177
arithTCType (T (TCon n [] Unboxed)) | n `elem`elem177,178
arithTCType arithTCType178,179
arithTCExpr arithTCExpr181,182
arithTCExpr (TE _ (PrimOp _ es) _) | length es `elem`elem182,183
arithTCExpr arithTCExpr183,184
splitArithConstraints splitArithConstraints191,192
andSExprs andSExprs202,203
instance Monoid Monoid (Constraint' x)208,209
  mempty mempty209,210
  mappend mappend210,211
instance Semigroup Semigroup (Constraint' x)216,217
  Sat Sat217,218
  x x218,219
instance Monoid Monoid (Constraint' x)220,221
  mempty mempty221,222
kindToConstraint kindToConstraint224,225
warnToConstraint warnToConstraint229,230
data TCType TCType238,239
data TCType         = T T238,239
                    | U U239,240
                    | R R240,241
                    | V V241,242
                    | Synonym Synonym242,243
data SExpr SExpr245,246
data SExpr          = SE SE245,246
                    | SU SU246,247
rigid rigid249,250
data FuncOrVar FuncOrVar258,259
data FuncOrVar = MustFunc MustFunc258,259
data FuncOrVar = MustFunc | MustVar MustVar258,259
data FuncOrVar = MustFunc | MustVar | FuncOrVar FuncOrVar258,259
funcOrVar funcOrVar260,261
data TExpr TExpr268,269
data TExpr      t = TE TE268,269
data TExpr      t = TE { getTypeTE getTypeTE268,269
data TExpr      t = TE { getTypeTE :: t, getExpr getExpr268,269
data TExpr      t = TE { getTypeTE :: t, getExpr :: Expr t (TPatn t) (TIrrefPatn t) (TExpr t), getLocTE getLocTE268,269
data TPatn TPatn271,272
data TPatn      t = TP TP271,272
data TPatn      t = TP { getPatn getPatn271,272
data TPatn      t = TP { getPatn :: Pattern (TIrrefPatn t), getLocTP getLocTP271,272
data TIrrefPatn TIrrefPatn276,277
data TIrrefPatn t = TIP TIP276,277
data TIrrefPatn t = TIP { getIrrefPatn getIrrefPatn276,277
data TIrrefPatn t = TIP { getIrrefPatn :: IrrefutablePattern (VarName, t) (TIrrefPatn t), getLocTIP getLocTIP276,277
instance Functor Functor TExpr281,282
  fmap fmap282,283
instance Functor Functor TPatn283,284
  fmap fmap284,285
instance Functor Functor TIrrefPatn285,286
  fmap fmap286,287
type TCName TCName288,289
type TCExpr TCExpr289,290
type TCPatn TCPatn290,291
type TCIrrefPatn TCIrrefPatn291,292
type TypedName TypedName293,294
type TypedExpr TypedExpr294,295
type TypedPatn TypedPatn295,296
type TypedIrrefPatn TypedIrrefPatn296,297
toTCType toTCType303,304
toSExpr toSExpr306,307
tcToSExpr tcToSExpr309,310
toLocType toLocType313,314
toLocExpr toLocExpr317,318
toLocPatn toLocPatn320,321
toLocIrrefPatn toLocIrrefPatn323,324
toTypedExpr toTypedExpr326,327
toTypedAlts toTypedAlts329,330
toRawType toRawType332,333
toRawExpr' toRawExpr'336,337
toRawExpr toRawExpr340,341
toRawPatn toRawPatn343,344
toRawIrrefPatn toRawIrrefPatn346,347
type TypeDict TypeDict356,357
data TcState TcState358,359
data TcState = TcState TcState358,359
data TcState = TcState { _knownFuns _knownFuns358,359
                       , _knownTypes _knownTypes359,360
                       , _knownConsts _knownConsts360,361
                       , _knownReps _knownReps361,362
instance Monoid Monoid TcState367,368
  mempty mempty368,369
  TcState x1 x2 x3 x4 `mappend`mappend369,370
instance Semigroup Semigroup TcState371,372
  TcState TcState372,373
instance Monoid Monoid TcState373,374
  mempty mempty374,375
data TcLogState TcLogState378,379
data TcLogState = TcLogState TcLogState378,379
data TcLogState = TcLogState { _errLog _errLog378,379
                             , _errCtx _errCtx379,380
instance Monoid Monoid TcLogState384,385
  mempty mempty385,386
  TcLogState l1 c1 `mappend`mappend386,387
instance Semigroup Semigroup TcLogState388,389
  TcLogState TcLogState389,390
instance Monoid Monoid TcLogState390,391
  mempty mempty391,392
runTc runTc395,396
type TcM TcM407,408
type TcConsM TcConsM408,409
type TcErrM TcErrM409,410
type TcBaseM TcBaseM410,411
withTcConsM withTcConsM418,419
logErr logErr421,422
logErrExit logErrExit424,425
logWarn logWarn428,429
logTc logTc434,435
exitErr exitErr437,438
exitOnErr exitOnErr440,441
substType substType451,452
validateType validateType464,465
validateType' validateType'468,469
validateTypes' validateTypes'495,496
flexOf flexOf499,500
isSynonym isSynonym506,507
isIntType isIntType513,514
isIntType (RT (TCon cn ts s)) | cn `elem`elem514,515
isIntType isIntType515,516
isVariantType isVariantType517,518
isMonoType isMonoType521,522
unifVars unifVars525,526

./src/Cogent/TypeCheck/Subst.hs,913
module Cogent.TypeCheck.Subst Cogent.TypeCheck.Subst12,13
data AssignResult AssignResult28,29
data AssignResult = Type Type28,29
data AssignResult = Type TCType | Sigil Sigil28,29
data AssignResult = Type TCType | Sigil (Sigil ()) | Row Row28,29
data AssignResult = Type TCType | Sigil (Sigil ()) | Row (Row.Row TCType) | Taken Taken28,29
newtype Subst Subst31,32
ofType ofType34,35
ofRow ofRow37,38
ofSigil ofSigil40,41
ofTaken ofTaken43,44
null null47,48
instance Monoid Monoid Subst51,52
  mempty mempty52,53
  mappend mappend53,54
instance Semigroup Semigroup Subst55,56
  Subst Subst56,57
instance Monoid Monoid Subst57,58
  mempty mempty58,59
apply apply63,64
applyToRow applyToRow80,81
applyAlts applyAlts88,89
applyAlt applyAlt91,92
applyCtx applyCtx94,95
applyErr applyErr99,100
applyWarn applyWarn110,111
applyC applyC114,115
applyE applyE133,134

./src/Cogent/TypeCheck/Post.hs,309
module Cogent.TypeCheck.Post Cogent.TypeCheck.Post15,16
type Post Post46,47
postT postT48,49
postE postE54,55
postA postA60,61
normaliseA normaliseA67,68
normaliseE normaliseE70,71
normaliseP normaliseP86,87
normaliseIP normaliseIP94,95
normaliseT normaliseT102,103
tkNorm tkNorm172,173

./src/Cogent/TypeCheck/Assignment.hs,661
module Cogent.TypeCheck.Assignment Cogent.TypeCheck.Assignment1,2
newtype Assignment Assignment12,13
lookup lookup15,16
singleton singleton18,19
null null21,22
instance Monoid Monoid Assignment25,26
  mempty mempty26,27
  mappend mappend27,28
instance Semigroup Semigroup Assignment29,30
  Assignment Assignment30,31
instance Monoid Monoid Assignment31,32
  mempty mempty32,33
forUnknowns forUnknowns35,36
assign assign39,40
assignAlts assignAlts42,43
assignAlt assignAlt45,46
assignE assignE48,49
assignT assignT56,57
assignC assignC63,64
assignErr assignErr81,82
assignWarn assignWarn84,85
assignCtx assignCtx87,88

./src/Cogent/TypeCheck/Row.hs,1164
module Cogent.TypeCheck.RowCogent.TypeCheck.Row12,13
type Entry Entry66,67
data Row Row68,69
data Row t = Row Row68,69
data Row t = Row { entries entries68,69
                 , var var69,70
fromList fromList74,75
fromListWithTkVars fromListWithTkVars78,79
toEntryList toEntryList82,83
fromMap fromMap86,87
fromMapWithTkVars fromMapWithTkVars91,92
incomplete incomplete95,96
incompleteWithTkVars incompleteWithTkVars100,101
common common106,107
withoutCommon withoutCommon110,111
allTypes allTypes115,116
typesFor typesFor119,120
null null124,125
justVar justVar129,130
compatible compatible134,135
takenEntries takenEntries141,142
untakenEntries untakenEntries145,146
vartakenEntries vartakenEntries149,150
takenLabels takenLabels154,155
untakenLabels untakenLabels158,159
takenTypes takenTypes163,164
untakenTypes untakenTypes167,168
takenLabelsSet takenLabelsSet172,173
untakenLabelsSet untakenLabelsSet176,177
mapEntries mapEntries182,183
take take186,187
takeMany takeMany189,190
takeAll takeAll192,193
put put196,197
putMany putMany199,200
putAll putAll202,203
takenIn takenIn206,207

./src/Cogent/TypeCheck/Solver.hs,81
module Cogent.TypeCheck.Solver Cogent.TypeCheck.Solver23,24
solve solve88,89

./src/Cogent/TypeCheck/Solver/Unify.hs,143
module Cogent.TypeCheck.Solver.Unify Cogent.TypeCheck.Solver.Unify0,1
unify unify19,20
assignOf assignOf25,26
notOccurs notOccurs63,64

./src/Cogent/TypeCheck/Solver/Monad.hs,187
module Cogent.TypeCheck.Solver.Monad Cogent.TypeCheck.Solver.Monad12,13
type TcSolvM TcSolvM22,23
solvFresh solvFresh24,25
solvFreshes solvFreshes30,31
runSolver runSolver34,35

./src/Cogent/TypeCheck/Solver/Equate.hs,202
module Cogent.TypeCheck.Solver.Equate Cogent.TypeCheck.Solver.Equate0,1
equate equate20,21
getMentions getMentions41,42
findEquateCandidates findEquateCandidates56,57
notOccurs notOccurs97,98

./src/Cogent/TypeCheck/Solver/SinkFloat.hs,107
module Cogent.TypeCheck.Solver.SinkFloat Cogent.TypeCheck.Solver.SinkFloat3,4
sinkfloat sinkfloat34,35

./src/Cogent/TypeCheck/Solver/Normalise.hs,167
module Cogent.TypeCheck.Solver.Normalise Cogent.TypeCheck.Solver.Normalise12,13
normaliseRW normaliseRW29,30
whnf whnf78,79
normaliseTypes normaliseTypes89,90

./src/Cogent/TypeCheck/Solver/Rewrite.hs,815
module Cogent.TypeCheck.Solver.RewriteCogent.TypeCheck.Solver.Rewrite12,13
type Rewrite Rewrite48,49
newtype Rewrite' Rewrite'52,53
newtype Rewrite' m a = Rewrite Rewrite52,53
newtype Rewrite' m a = Rewrite { run' run'52,53
instance Monad Monad m => Monoid (Rewrite' m a)59,60
  mempty mempty60,61
  Rewrite f `mappend`mappend61,62
instance Monad Monad m => Semigroup (Rewrite' m a)63,64
  Rewrite Rewrite64,65
instance Monad Monad m => Monoid (Rewrite' m a)66,67
  mempty mempty67,68
pre pre71,72
andThen andThen77,78
rewrite rewrite81,82
rewrite' rewrite'86,87
run run91,92
untilFixedPoint untilFixedPoint95,96
withTransform withTransform110,111
pickOne pickOne122,123
pickOne' pickOne'126,127
lift lift137,138
debugFail debugFail142,143
debugPass debugPass147,148

./src/Cogent/TypeCheck/Solver/Simplify.hs,367
module Cogent.TypeCheck.Solver.Simplify Cogent.TypeCheck.Solver.Simplify0,1
onGoal onGoal21,22
unsat unsat24,25
elseDie elseDie27,28
simplify simplify30,31
unorderedType unorderedType177,178
untakenLabelsSet untakenLabelsSet191,192
isIrrefutable isIrrefutable194,195
extractVariableEquality extractVariableEquality200,201
isSolved isSolved209,210

./src/Cogent/TypeCheck/Solver/Goal.hs,346
module Cogent.TypeCheck.Solver.Goal Cogent.TypeCheck.Solver.Goal16,17
data Goal Goal29,30
data Goal = Goal Goal29,30
data Goal = Goal { _goalContext _goalContext29,30
                 , _goal _goal30,31
instance Show Show Goal33,34
  show show34,35
makeGoals makeGoals40,41
makeGoal makeGoal45,46
derivedGoal derivedGoal48,49

./src/Cogent/TypeCheck/Solver/Default.hs,180
module Cogent.TypeCheck.Solver.Default Cogent.TypeCheck.Solver.Default1,2
defaults defaults25,26
findUpcasts findUpcasts37,38
maybeT maybeT53,54
primGuess primGuess56,57

./src/Cogent/TypeCheck/Errors.hs,83
module Cogent.TypeCheck.Errors Cogent.TypeCheck.Errors0,1
toErrors toErrors8,9

./src/Cogent/TypeCheck/Util.hs,246
module Cogent.TypeCheck.Util Cogent.TypeCheck.Util19,20
(%(%%=)36,37
indent indent43,44
traceTc traceTc45,46
traceTc' traceTc'48,49
traceTcBracket traceTcBracket51,52
  | Just ws <- __cogent_ddump_tc_filter, s `notElem`notElem53,54

./src/Cogent/Inference.hs,949
module Cogent.Inference Cogent.Inference35,36
guardShow guardShow75,76
guardShow' guardShow'78,79
isUpcastable isUpcastable85,86
isSubtype isSubtype95,96
bound bound99,100
lub lub123,124
glb glb126,127
bang bang135,136
unbox unbox151,152
substitute substitute162,163
remove remove178,179
adjust adjust181,182
newtype TC TC184,185
newtype TC (t :: Nat) (v :: Nat) a = TC {unTC unTC184,185
(<(<||>)191,192
(T(TCa)192,193
opType opType215,216
  | opr `elem`elem217,218
opType opType225,226
useVariable useVariable229,230
funType funType238,239
runTC runTC241,242
retype retype259,260
tc tc262,263
tc_ tc_276,277
tcConsts tcConsts279,280
withBinding withBinding288,289
withBindings withBindings300,301
withBang withBang304,305
lookupKind lookupKind311,312
kindcheck_ kindcheck_314,315
kindcheck kindcheck331,332
typecheck typecheck334,335
infer infer342,343
promote promote546,547

./src/Cogent/Context.hs,881
module Cogent.ContextCogent.Context10,11
type Assumption Assumption34,35
newtype Context Context36,37
empty empty38,39
lookup lookup41,42
contains contains46,47
use use49,50
addScope addScope55,56
dropScope dropScope58,59
mode' mode'62,63
mode mode71,72
data UnionHelper UnionHelper87,88
data UnionHelper x = First First87,88
data UnionHelper x = First x | Second Second87,88
data UnionHelper x = First x | Second x | Both Both87,88
unhelp unhelp89,90
isFirst isFirst94,95
isSecond isSecond98,99
merge' merge'102,103
merge merge118,119
data JoinHelper JoinHelper129,130
data JoinHelper x = None None129,130
data JoinHelper x = None x | One One129,130
data JoinHelper x = None x | One x | Two Two129,130
unhelp' unhelp'131,132
isNone isNone136,137
isOne isOne139,140
isTwo isTwo142,143
join' join'145,146
join join161,162

./src/Cogent/LLVM/Compile.hs,0

./src/Cogent/LLVM/CoreLang.hs,54
module Cogent.LLVM.CoreLang Cogent.LLVM.CoreLang0,1

./src/Cogent/LLVM/Syntax.hs,342
module Cogent.LLVM.Syntax Cogent.LLVM.Syntax5,6
data IdName IdName18,19
data IdName = Name Name18,19
data IdName = Name String | Unname Unname18,19
data LId LId21,22
data LId = Local Local21,22
data LId = Local IdName | Global Global21,22
data LExpr LExpr24,25
data LExpr = Const Const24,25
            | Instr Instr25,26

./src/Cogent/Interpreter.hs,3951
module Cogent.Interpreter Cogent.Interpreter27,28
data ILit ILit75,76
data ILit = LU8 LU875,76
          | LU16 LU1676,77
          | LU32 LU3277,78
          | LU64 LU6478,79
toInt toInt81,82
intW intW87,88
data Value Value94,95
  = VInt VInt95,96
  | VBool VBool96,97
  | VString VString97,98
  | VUnitVUnit98,99
  | VRecord VRecord99,100
  | VVariant VVariant100,101
  | VProduct VProduct101,102
  | VFunction VFunction102,103
  | VThunk VThunk103,104
data HNF HNF106,107
  = VOp VOp107,108
  | VApp VApp108,109
  | VIf VIf109,110
  | VCase VCase110,111
  | VEsac VEsac111,112
  | VMember VMember112,113
  | VPut VPut113,114
  | VAbstract VAbstract114,115
  | VAFunction VAFunction115,116
instance (P(Prec a, Prec f, Prec (HNF a f)) => Prec (Value a f)118,119
  prec prec119,120
instance (P(Prec a, Prec f) => Prec (HNF a f)123,124
  prec prec124,125
instance Pretty Pretty ILit134,135
  pretty pretty135,136
instance (P(Pretty a, Pretty f, Prec (Value a f), Pretty (HNF a f)) => Pretty (Value a f)137,138
  pretty pretty138,139
instance (P(Pretty a, Pretty f, Prec a, Prec f, Pretty (Value a f), Prec (HNF a f)) => Pretty (HNF a f)148,149
  pretty pretty150,151
newtype ReplM ReplM171,172
newtype ReplM (v :: Nat) a f x = ReplM { unReplM unReplM171,172
data ReplState ReplState174,175
data ReplState v a f = ReplState ReplState174,175
data ReplState v a f = ReplState { _gamma _gamma174,175
                                 , _absfuns _absfuns175,176
                                 , _fundefs _fundefs176,177
runReplM runReplM181,182
getLines getLines184,185
continueGetLines continueGetLines186,187
  | ":f" `isPrefixOf`isPrefixOf188,189
continueGetLines continueGetLines195,196
data PreloadS PreloadS197,198
data PreloadS = PreloadS PreloadS197,198
data PreloadS = PreloadS { surface surface197,198
                         , tcState tcState198,199
                         , lastFile lastFile199,200
instance Monoid Monoid PreloadS203,204
  mempty mempty204,205
  PreloadS s1 t1 l1 `mappend`mappend205,206
instance Semigroup Semigroup PreloadS207,208
  PreloadS PreloadS208,209
instance Monoid Monoid PreloadS209,210
  mempty mempty210,211
replWithState replWithState213,214
repl repl222,223
type Cmdline Cmdline257,258
data ReplOption ReplOption259,260
data ReplOption = EvalExpr EvalExpr259,260
                | GetType GetType260,261
                | LoadFile LoadFile261,262
                | LoadCode LoadCode262,263
                | Clear Clear263,264
                | ReloadReload264,265
                | DisplayDisplay265,266
                | HelpHelp266,267
                | QuitQuit267,268
                | SkipSkip268,269
parseCmdline parseCmdline271,272
loadCode loadCode285,286
loadFile loadFile291,292
reloadFile reloadFile300,301
data InputSource InputSource307,308
data InputSource = FromFile FromFile307,308
data InputSource = FromFile FilePath | FromStdinFromStdin307,308
checkPreload checkPreload309,310
data Query Query332,333
data Query = QValue QValue332,333
data Query = QValue | QTypeQType332,333
interpExpr interpExpr334,335
parseExpr parseExpr363,364
tcExpr tcExpr366,367
coreTcExpr coreTcExpr382,383
dsExpr dsExpr394,395
withBinding withBinding415,416
withBindings withBindings420,421
withNewBindings withNewBindings424,425
data ExistsOp1 ExistsOp1430,431
data ExistsOp1  = ExistsOp1 ExistsOp1430,431
data ExistsOp2 ExistsOp2431,432
data ExistsOp2  = ExistsOp2 ExistsOp2431,432
data ExistsComp ExistsComp432,433
data ExistsComp = ExistsComp ExistsComp432,433
primWordOp1 primWordOp1434,435
primWordOp2 primWordOp2440,441
primWordComp primWordComp447,448
evalUnOp evalUnOp454,455
evalBinOp evalBinOp459,460
specialise specialise491,492
specialiseExpr specialiseExpr497,498
eval eval529,530

./src/Cogent/SuParser.hs,507
module Cogent.SuParser Cogent.SuParser13,14
language language33,34
T.TokenParser T.TokenParser39,40
data Qualifier Qualifier41,42
data Qualifier = Static Static41,42
data Qualifier = Static | Dynamic Dynamic41,42
type Bounded Bounded42,43
data StackUsage StackUsage44,45
data StackUsage = StackUsage StackUsage44,45
data OptFunName OptFunName45,46
data OptFunName = OptFunName OptFunName45,46
funcName funcName47,48
fileName fileName49,50
oneFunc oneFunc51,52
parse parse65,66

./src/Cogent/Glue.hs,8878
module Cogent.Glue Cogent.Glue32,33
parseFile parseFile96,97
defaultExts defaultExts109,110
defaultTypnames defaultTypnames112,113
getTypnames getTypnames115,116
data TcState TcState121,122
data TcState = TcState TcState121,122
data TcState = TcState { _tfuncs _tfuncs121,122
                       , _ttypes _ttypes122,123
                       , _consts _consts123,124
data DsState DsState126,127
data DsState = DsState DsState126,127
data DsState = DsState { _typedefs _typedefs126,127
                       , _constdefs _constdefs127,128
data CoreTcState CoreTcState130,131
data CoreTcState = CoreTcState CoreTcState130,131
data CoreTcState = CoreTcState { _funtypes _funtypes130,131
data MnState MnState132,133
data MnState = MnState MnState132,133
data MnState = MnState { _funMono _funMono132,133
                       , _typeMono _typeMono133,134
data CgState CgState136,137
data CgState = CgState CgState136,137
data CgState = CgState { _cTypeDefs _cTypeDefs136,137
                       , _cTypeDefMap _cTypeDefMap137,138
                       , _typeSynonyms _typeSynonyms138,139
                       , _typeCorres _typeCorres139,140
                       , _absTypes _absTypes140,141
                       , _custTypeGen _custTypeGen141,142
                       , _funClasses _funClasses142,143
                       , _localOracle _localOracle143,144
                       , _globalOracle _globalOracle144,145
data GlState GlState147,148
data GlState = GlState GlState147,148
data GlState = GlState { _tcDefs _tcDefs147,148
                       , _tcState _tcState148,149
                       , _dsState _dsState149,150
                       , _coreTcState _coreTcState150,151
                       , _mnState _mnState151,152
                       , _cgState _cgState152,153
                       , _defns _defns153,154
data FileState FileState156,157
data FileState = FileState FileState156,157
data FileState = FileState { _file _file156,157
data DefnState DefnState158,159
data DefnState t = DefnState DefnState158,159
data DefnState t = DefnState { _kenv _kenv158,159
                             , _ectx _ectx159,160
data MonoState MonoState162,163
data MonoState = MonoState MonoState162,163
data MonoState = MonoState { _inst _inst162,163
type GlMono GlMono174,175
type GlDefn GlDefn175,176
type GlFile GlFile176,177
type Gl Gl177,178
type GlErr GlErr178,179
class Monad m => HandleQuotes1 HandleQuotes1188,189
  handleQuotes1 handleQuotes1189,190
defaultHandleQuotes defaultHandleQuotes191,192
instance Monad Monad m => HandleQuotes1 V1 m194,195
  handleQuotes1 handleQuotes1195,196
instance Monad Monad m => HandleQuotes1 U1 m197,198
  handleQuotes1 handleQuotes1198,199
instance (M(Monad m, HandleQuotes c m) => HandleQuotes1 (K1 i c) m200,201
  handleQuotes1 handleQuotes1201,202
instance (M(Monad m, HandleQuotes1 f m) => HandleQuotes1 (M1 i c f) m203,204
  handleQuotes1 handleQuotes1204,205
instance (M(Monad m, HandleQuotes1 f m, HandleQuotes1 g m) => HandleQuotes1 (f :+: g) m206,207
  handleQuotes1 handleQuotes1207,208
instance (M(Monad m, HandleQuotes1 f m, HandleQuotes1 g m) => HandleQuotes1 (f :*: g) m210,211
  handleQuotes1 handleQuotes1211,212
class Monad m => HandleQuotes HandleQuotes213,214
  handleQuotes handleQuotes214,215
instance Monad Monad m => HandleQuotes AsmOut m248,249
  handleQuotes handleQuotes249,250
instance Monad Monad m => HandleQuotes AssignOp m251,252
  handleQuotes handleQuotes252,253
instance Monad Monad m => HandleQuotes BinOp m254,255
  handleQuotes handleQuotes255,256
instance Monad Monad m => HandleQuotes Bool m257,258
  handleQuotes handleQuotes258,259
instance Monad Monad m => HandleQuotes Char m260,261
  handleQuotes handleQuotes261,262
instance Monad Monad m => HandleQuotes CS-Const m263,264
  handleQuotes handleQuotes264,265
instance Monad Monad m => HandleQuotes CS-Id m266,267
  handleQuotes handleQuotes267,268
instance Monad Monad m => HandleQuotes CS-LambdaIntroducer m269,270
  handleQuotes handleQuotes270,271
instance Monad Monad m => HandleQuotes CS-LambdaDeclarator m272,273
  handleQuotes handleQuotes273,274
instance Monad Monad m => HandleQuotes CS-ObjCArg m275,276
  handleQuotes handleQuotes276,277
instance Monad Monad m => HandleQuotes CS-ObjCCatch m278,279
  handleQuotes handleQuotes279,280
instance Monad Monad m => HandleQuotes CS-ObjCDictElem m281,282
  handleQuotes handleQuotes282,283
instance Monad Monad m => HandleQuotes CS-ObjCIfaceDecl m284,285
  handleQuotes handleQuotes285,286
instance Monad Monad m => HandleQuotes CS-ObjCRecv m287,288
  handleQuotes handleQuotes288,289
instance Monad Monad m => HandleQuotes CS-ObjCIvarDecl m290,291
  handleQuotes handleQuotes291,292
instance Monad Monad m => HandleQuotes CS-ObjCMethodProto m293,294
  handleQuotes handleQuotes294,295
instance Monad Monad m => HandleQuotes CS-Sign m296,297
  handleQuotes handleQuotes297,298
instance Monad Monad m => HandleQuotes SrcLoc m299,300
  handleQuotes handleQuotes300,301
instance Monad Monad m => HandleQuotes CS-Storage m302,303
  handleQuotes handleQuotes303,304
instance Monad Monad m => HandleQuotes CS-StringLit m305,306
  handleQuotes handleQuotes306,307
instance Monad Monad m => HandleQuotes CS-UnOp m308,309
  handleQuotes handleQuotes309,310
instance (M(Monad m, HandleQuotes a m, HandleQuotes b m) => HandleQuotes (a, b) m311,312
instance HandleQuotes HandleQuotes CS-AsmIn (GlMono t)315,316
instance HandleQuotes HandleQuotes CS-ArraySize (GlMono t)316,317
instance HandleQuotes HandleQuotes CS-Attr (GlMono t)317,318
instance HandleQuotes HandleQuotes CS-BlockItem (GlMono t)318,319
instance HandleQuotes HandleQuotes CS-BlockType (GlMono t)319,320
instance HandleQuotes HandleQuotes CS-CEnum (GlMono t)320,321
instance HandleQuotes HandleQuotes CS-Designation (GlMono t)321,322
instance HandleQuotes HandleQuotes CS-Designator (GlMono t)322,323
instance HandleQuotes HandleQuotes CS-ExeConfig (GlMono t)323,324
instance HandleQuotes HandleQuotes CS-Field (GlMono t)324,325
instance HandleQuotes HandleQuotes CS-FieldGroup (GlMono t)325,326
instance HandleQuotes HandleQuotes CS-Func (GlMono t)326,327
instance HandleQuotes HandleQuotes CS-Init (GlMono t)327,328
instance HandleQuotes HandleQuotes CS-InitGroup (GlMono t)328,329
instance HandleQuotes HandleQuotes CS-Initializer (GlMono t)329,330
instance HandleQuotes HandleQuotes CS-Param (GlMono t)330,331
instance HandleQuotes HandleQuotes CS-Params (GlMono t)331,332
instance HandleQuotes HandleQuotes CS-Typedef (GlMono t)332,333
instance HandleQuotes HandleQuotes CS-TypeQual (GlMono t)333,334
instance (M(Monad m, HandleQuotes a m) => HandleQuotes (Maybe a) m335,336
instance HandleQuotes HandleQuotes (Either CS-InitGroup (Maybe Exp)) (GlMono t)337,338
instance (M(Monad m, HandleQuotes a m) => HandleQuotes [a] m345,346
instance HandleQuotes HandleQuotes CS-Definition (GlMono t)354,355
  handleQuotes handleQuotes355,356
instance HandleQuotes HandleQuotes CS-Stm (GlMono t)412,413
  handleQuotes handleQuotes413,414
instance HandleQuotes HandleQuotes CS-Exp (GlMono t)416,417
  handleQuotes handleQuotes417,418
instance HandleQuotes HandleQuotes CS-DeclSpec (GlMono t)436,437
  handleQuotes handleQuotes437,438
instance HandleQuotes HandleQuotes CS-Decl (GlMono t)443,444
  handleQuotes handleQuotes444,445
instance HandleQuotes HandleQuotes CS-Type (GlMono t)448,449
  handleQuotes handleQuotes449,450
instance HandleQuotes HandleQuotes CS-TypeSpec (GlMono t)453,454
  handleQuotes handleQuotes454,455
parseAnti parseAnti465,466
tcAnti tcAnti475,476
desugarAnti desugarAnti491,492
coreTcAnti coreTcAnti497,498
monoAnti monoAnti504,505
genAnti genAnti510,511
parseType parseType529,530
tcType tcType533,534
desugarType desugarType540,541
monoType monoType543,544
genType genType546,547
parseFnCall parseFnCall551,552
tcFnCall tcFnCall554,555
genFn genFn562,563
genFnCall genFnCall567,568
parseExp parseExp574,575
tcExp tcExp577,578
desugarExp desugarExp592,593
coreTcExp coreTcExp595,596
monoExp monoExp598,599
genExp genExp601,602
genFuncId genFuncId609,610
parseTypeId parseTypeId620,621
genTypeId genTypeId623,624
traversals traversals628,629
traverseOneFunc traverseOneFunc633,634
traverseOneType traverseOneType704,705
traverseOne traverseOne729,730
traverseAll traverseAll748,749
data GlueMode GlueMode754,755
data GlueMode = TypeMode TypeMode754,755
data GlueMode = TypeMode | FuncMode FuncMode754,755
glue glue756,757
mkGlState mkGlState771,772
tyVars tyVars804,805
readEntryFuncs readEntryFuncs815,816

./src/Cogent/DocGent.hs,1952
module Cogent.DocGent Cogent.DocGent16,17
import import26,27
data SGRState SGRState56,57
data SGRState = SGRState SGRState56,57
data SGRState = SGRState { _intensity _intensity56,57
                         , _fg _fg57,58
                         , _bg _bg58,59
                         , _italics _italics59,60
                         , _underline _underline60,61
markdown markdown65,66
handleInline handleInline76,77
classesFor classesFor84,85
currentSpan currentSpan88,89
defaultState defaultState115,116
prettyFieldNames prettyFieldNames117,118
containsDocumentation containsDocumentation123,124
listTypes listTypes127,128
prettyPT prettyPT133,134
prettyType prettyType139,140
withLinking withLinking199,200
data DocExpr DocExpr205,206
data DocExpr = DE DE205,206
data DocExpr = DE { unDE unDE205,206
             | DocFnCall DocFnCall206,207
instance ExprType ExprType DocExpr208,209
  isVar isVar209,210
instance Prec Prec DocExpr212,213
  prec prec213,214
instance Pretty Pretty DocExpr216,217
  pretty pretty217,218
resolveNamesA resolveNamesA221,222
resolveNames resolveNames224,225
resolveNames lcls (RE (TypeApp v ts i)) | v `notElem`notElem225,226
resolveNames resolveNames229,230
resolveBinders resolveBinders233,234
resolveBinder resolveBinder241,242
adjustSGRs adjustSGRs250,251
displayHTML displayHTML262,263
makeHtml makeHtml270,271
genDoc genDoc274,275
template template350,351
<html><html>352,353
template template374,375
<html><html>375,376
rawTemplate rawTemplate399,400
foreach foreach413,414
titleFor titleFor416,417
fileNameFor fileNameFor422,423
rawFileNameFor rawFileNameFor423,424
commonPrefix commonPrefix425,426
commonPrefix' commonPrefix'432,433
commonOfAll commonOfAll435,436
sourcePosDiv sourcePosDiv440,441
docGent docGent446,447
generateContents generateContents484,485
generateIndex generateIndex502,503

./src/Cogent/Mono.hs,654
module Cogent.Mono Cogent.Mono30,31
type Instance Instance54,55
type FunMono FunMono59,60
type TypeMono TypeMono60,61
newtype Mono Mono62,63
newtype Mono a = Mono { runMono runMono62,63
absFuns absFuns72,73
absFunMono absFunMono82,83
printAFM printAFM89,90
mono mono92,93
monoDefinitions monoDefinitions101,102
monoDefinition monoDefinition104,105
monoDefinitionInsts monoDefinitionInsts128,129
monoName monoName136,137
monoDefinitionInst monoDefinitionInst141,142
getPrimInt getPrimInt152,153
monoExpr monoExpr156,157
monoType monoType192,193
monoCustTyGen monoCustTyGen222,223
checkMonoType checkMonoType225,226

./src/Cogent/Desugar.hs,1818
module Cogent.Desugar Cogent.Desugar31,32
import import44,45
type TypeVars TypeVars78,79
type TermVars TermVars79,80
type Typedefs Typedefs80,81
type Constants Constants81,82
type Enumerator Enumerator82,83
data DsState DsState84,85
data DsState t v = DsState DsState84,85
data DsState t v = DsState { _typCtx _typCtx84,85
                           , _varCtx _varCtx85,86
                           , _oracleLcl _oracleLcl86,87
                           , _oracleGbl _oracleGbl87,88
                           , _lftFun _lftFun88,89
newtype DS DS93,94
newtype DS (t :: Nat) (v :: Nat) a = DS { runDS runDS93,94
desugar desugar104,105
desugar' desugar'130,131
noPos noPos167,168
freshVarPrefix freshVarPrefix169,170
freshFunPrefix freshFunPrefix170,171
freshVar freshVar173,174
freshVars freshVars176,177
freshFun freshFun180,181
withTypeBinding withTypeBinding184,185
withTypeBindings withTypeBindings191,192
withBinding withBinding195,196
withBindings withBindings202,203
pragmaToAttr pragmaToAttr206,207
pragmaToNote pragmaToNote211,212
lamLftTlv lamLftTlv222,223
lamLftAlt lamLftAlt227,228
lamLftExpr lamLftExpr230,231
desugarTlv desugarTlv257,258
desugarAlts desugarAlts290,291
desugarAlt desugarAlt336,337
desugarAlt' desugarAlt'340,341
desugarPrimInt desugarPrimInt503,504
desugarType desugarType511,512
desugarSigil desugarSigil550,551
desugarNote desugarNote554,555
desugarExpr desugarExpr558,559
desugarExpr' desugarExpr'701,702
desugarConst desugarConst721,722
desugarConsts desugarConsts725,726
evalAExpr evalAExpr735,736
evalPrimAExpr1 evalPrimAExpr1749,750
evalPrimAExpr2 evalPrimAExpr2752,753
evalAExprBop evalAExprBop755,756
evalAExprUop evalAExprUop775,776
desugarCustTyGen desugarCustTyGen782,783

./src/Cogent/Haskell/Shallow.hs,2711
module Cogent.Haskell.Shallow Cogent.Haskell.Shallow35,36
import import92,93
data ReaderGen ReaderGen126,127
data ReaderGen = ReaderGenReaderGen126,127
  { _typeStrs _typeStrs127,128
  , _typeVars _typeVars128,129
  , _recoverTuples _recoverTuples129,130
  , _localBindings _localBindings130,131
typarUpd typarUpd136,137
pushScope pushScope139,140
addBindings addBindings143,144
data WriterGen WriterGen146,147
data WriterGen = WriterGenWriterGen146,147
  { datatypes datatypes147,148
data StateGen StateGen150,151
data StateGen = StateGenStateGen150,151
  { _freshInt _freshInt151,152
  , _nominalTypes _nominalTypes152,153
instance Monoid Monoid WriterGen158,159
  mempty mempty159,160
  WriterGen ds1 `mappend`mappend160,161
instance Semigroup Semigroup WriterGen162,163
  WriterGen WriterGen163,164
instance Monoid Monoid WriterGen164,165
  mempty mempty165,166
newtype SG SG168,169
newtype SG a = SG { runSG runSG168,169
shallow shallow179,180
shallow shallow187,188
shallowTypeDef shallowTypeDef232,233
shallowDefinition shallowDefinition237,238
shallowDefinitions shallowDefinitions288,289
shallowConst shallowConst291,292
shallowTypesFromTable shallowTypesFromTable302,303
keywords keywords316,317
snm snm322,323
snm s | s `elem`elem323,324
snm snm324,325
tagName tagName329,330
recTypeName recTypeName333,334
varTypeName varTypeName335,336
typeParam typeParam337,338
typeStr typeStr363,364
isRecOrVar isRecOrVar369,370
typeComponents typeComponents377,378
typeStrFields typeStrFields384,385
nominalType nominalType391,392
nominalTypeStr nominalTypeStr395,396
shallowTypeNominal shallowTypeNominal419,420
decTypeStr decTypeStr427,428
shallowRecTupleType shallowRecTupleType459,460
shallowType shallowType463,464
shallowPrimType shallowPrimType481,482
shallowExpr shallowExpr492,493
shallowPrimOp shallowPrimOp599,600
shallowILit shallowILit622,623
shallowLet shallowLet627,628
getSafeBinder getSafeBinder641,642
getRecordFieldName getRecordFieldName648,649
shallowGetter shallowGetter661,662
shallowGetter' shallowGetter'675,676
shallowSetter shallowSetter702,703
internalVar internalVar711,712
mkName mkName718,719
mkName s | P.head s `elem`elem719,720
mkName mkName720,721
mkQName mkQName722,723
mkDeclHead mkDeclHead725,726
mkForallT mkForallT729,730
mkTyConT mkTyConT732,733
mkVarT mkVarT735,736
mkConT mkConT738,739
mkAppT mkAppT741,742
mkTupleT mkTupleT744,745
mkVarE mkVarE747,748
mkQVarE mkQVarE750,751
mkConE mkConE753,754
mkVarP mkVarP756,757
mkVarOp mkVarOp759,760
mkAppE mkAppE762,763
mkLetE mkLetE765,766
tyVars tyVars774,775

./src/Cogent/Haskell/FFIGen.hs,258
module Cogent.Haskell.FFIGen Cogent.Haskell.FFIGen20,21
type FFIFuncs FFIFuncs40,41
type Gen Gen42,43
ffiHs ffiHs44,45
ffiModule ffiModule50,51
ffiDefinition ffiDefinition63,64
hsc2hsType hsc2hsType88,89
mkTyCon mkTyCon95,96
inIO inIO98,99

./src/Cogent/Haskell/HscSyntax.hs,4041
module Cogent.Haskell.HscSyntax Cogent.Haskell.HscSyntax12,13
data HscModule HscModule23,24
data HscModule = HscModule HscModule23,24
data ModulePragma ModulePragma25,26
data ModulePragma = LanguagePragma LanguagePragma25,26
data Declaration Declaration27,28
data Declaration = HsDecl HsDecl27,28
data Declaration = HsDecl HsDecl | HscDecl HscDecl27,28
data Declaration = HsDecl HsDecl | HscDecl HscDecl | EmptyDeclEmptyDecl27,28
data HsDecl HsDecl29,30
data HsDecl = ImportDecl ImportDecl29,30
            | DataDecl DataDecl31,32
            | TypeDecl TypeDecl32,33
            | InstDecl InstDecl33,34
type Qualified Qualified35,36
data Context Context37,38
data Context = Context Context37,38
data Binding Binding39,40
data Binding = Binding Binding39,40
data Pattern Pattern41,42
data Pattern = PVar PVar41,42
             | PCon PCon42,43
             | PUnderscorePUnderscore43,44
data Expression Expression45,46
data Expression = EVar EVar45,46
                | ELit ELit46,47
                | EDo EDo47,48
                | EApplicative EApplicative48,49
                | EOp EOp49,50
                | ECon ECon50,51
                | EApp EApp51,52
                | EAbs EAbs52,53
                | ELet ELet53,54
                | EHsc EHsc54,55
                | ETuple ETuple55,56
data Literal Literal57,58
data Literal = LitInt LitInt57,58
data Literal = LitInt Integer | LitChar LitChar57,58
data Literal = LitInt Integer | LitChar Char | LitBool LitBool57,58
data HscSymbol HscSymbol59,60
data HscSymbol = HashPeek HashPeek59,60
data HscSymbol = HashPeek | HashPoke HashPoke59,60
data HscSymbol = HashPeek | HashPoke | HashSize HashSize59,60
data HscSymbol = HashPeek | HashPoke | HashSize | HashAlignmentHashAlignment59,60
data DoStatement DoStatement61,62
data DoStatement = DoBind DoBind61,62
                 | DoLet DoLet62,63
data DataCon DataCon64,65
data DataCon = DataCon DataCon64,65
data Type Type67,68
data Type = TyCon TyCon67,68
          | TyVar TyVar68,69
          | TyTuple TyTuple69,70
data HscDecl HscDecl71,72
data HscDecl = HashInclude HashInclude71,72
data HscDecl = HashInclude String | HashEnum HashEnum71,72
type ModuleName ModuleName73,74
type VarName VarName74,75
type OpName OpName75,76
type TyVarName TyVarName76,77
type TypeName TypeName77,78
type ConsName ConsName78,79
type ClassName ClassName79,80
type FieldName FieldName80,81
type TagName TagName81,82
class Pretty t => Pretty' Pretty'88,89
  pretty' pretty'89,90
  level level92,93
instance Pretty Pretty HscModule94,95
  pretty pretty95,96
instance Pretty Pretty ModulePragma100,101
  pretty pretty101,102
  prettyList prettyList102,103
instance Pretty Pretty Declaration104,105
  pretty pretty105,106
  prettyList prettyList109,110
instance Pretty Pretty HsDecl111,112
  pretty pretty112,113
instance Pretty Pretty Context126,127
  pretty pretty127,128
  prettyList prettyList129,130
instance Pretty Pretty Binding133,134
  pretty pretty134,135
  prettyList prettyList135,136
instance Pretty Pretty Pattern137,138
  pretty pretty138,139
  prettyList prettyList142,143
instance Pretty' Pretty' Pattern144,145
  level level145,146
instance Pretty Pretty Expression150,151
  pretty pretty151,152
  prettyList prettyList168,169
instance Pretty' Pretty' Expression170,171
  level level171,172
instance Pretty Pretty Literal179,180
  pretty pretty180,181
instance Pretty Pretty HscSymbol184,185
  pretty pretty185,186
instance Pretty Pretty DoStatement190,191
  pretty pretty191,192
  prettyList prettyList195,196
instance Pretty Pretty DataCon197,198
  pretty pretty198,199
  prettyList prettyList199,200
instance Pretty Pretty Type201,202
  pretty pretty202,203
  prettyList prettyList207,208
instance Pretty' Pretty' Type209,210
  level level210,211
instance Pretty Pretty HscDecl214,215
  pretty pretty215,216

./src/Cogent/Haskell/HscGen.hs,476
module Cogent.Haskell.HscGen Cogent.Haskell.HscGen20,21
ffiHsc ffiHsc41,42
ffiHsc ffiHsc49,50
hscModule hscModule53,54
hscTagsT hscTagsT84,85
hscUntypedFuncEnum hscUntypedFuncEnum85,86
toHscName toHscName87,88
hscEnum hscEnum89,90
hscTag hscTag96,97
hscExpr hscExpr99,100
hscTyDecl hscTyDecl103,104
hscType hscType109,110
hscPrimType hscPrimType129,130
hscPtr hscPtr133,134
hscEnumTypes hscEnumTypes153,154
hscStorageInst hscStorageInst157,158

./src/Cogent/ReprCheck.hs,896
module Cogent.ReprCheck Cogent.ReprCheck19,20
data RepContext RepContext29,30
data RepContext = InField InField29,30
                | InTag InTag30,31
                | InAlt InAlt31,32
                | InDecl InDecl32,33
data RepError RepError35,36
data RepError = OverlappingBlocks OverlappingBlocks35,36
              | UnknownRepr UnknownRepr36,37
              | TagMustBeSingleBlock TagMustBeSingleBlock37,38
type Allocation Allocation40,41
data Block Block42,43
data Block = Block Block42,43
data Block = Block { blockSize blockSize42,43
data Block = Block { blockSize :: Int, blockOffset blockOffset42,43
data Block = Block { blockSize :: Int, blockOffset :: Int, blockContext blockContext42,43
(\(\/)45,46
a a46,47
(/(/\)48,49
(x(x:xs)49,50
[] []59,60
offsetAllocation offsetAllocation62,63
offsetRep offsetRep65,66
compile compile71,72

./src/Cogent/Common/Types.hs,1334
module Cogent.Common.Types Cogent.Common.Types17,18
type ReadOnly ReadOnly28,29
data Sigil Sigil30,31
data Sigil r = Boxed Boxed30,31
             | Unboxed Unboxed31,32
instance Binary Binary r => Binary (Sigil r)34,35
bangSigil bangSigil36,37
unboxSigil unboxSigil40,41
writable writable43,44
readonly readonly47,48
unboxed unboxed51,52
data PrimInt PrimInt55,56
data PrimInt = U8 U855,56
data PrimInt = U8 | U16 U1655,56
data PrimInt = U8 | U16 | U32 U3255,56
data PrimInt = U8 | U16 | U32 | U64 U6455,56
data PrimInt = U8 | U16 | U32 | U64 | Boolean Boolean55,56
instance Binary Binary PrimInt57,58
isSubtypePrim isSubtypePrim59,60
instance Pretty Pretty PrimInt73,74
  pretty pretty74,75
data Kind Kind76,77
data Kind = K K76,77
data Kind = K { canEscape canEscape76,77
data Kind = K { canEscape :: Bool, canShare canShare76,77
data Kind = K { canEscape :: Bool, canShare :: Bool, canDiscard canDiscard76,77
sigilKind sigilKind79,80
k0, k1, k2 k283,84
k0, k1,k183,84
k0,k083,84
k1 k185,86
k2 k286,87
instance Monoid Monoid Kind90,91
  mempty mempty91,92
  mappend mappend92,93
instance Semigroup Semigroup Kind101,102
  K K102,103
instance Monoid Monoid Kind103,104
  mempty mempty104,105
bangKind bangKind107,108
primTypeCons primTypeCons110,111

./src/Cogent/Common/Syntax.hs,2649
module Cogent.Common.Syntax Cogent.Common.Syntax5,6
type RepName RepName18,19
type FieldName FieldName19,20
type TagName TagName20,21
type FunName FunName21,22
type ConstName ConstName22,23
type VarName VarName23,24
type TyVarName TyVarName24,25
type TypeName TypeName25,26
newtype CoreFunName CoreFunName27,28
newtype CoreFunName = CoreFunName { unCoreFunName unCoreFunName27,28
funNameToCoreFunName funNameToCoreFunName30,31
unsafeNameToCoreFunName unsafeNameToCoreFunName33,34
unsafeCoreFunName unsafeCoreFunName36,37
type FieldIndex FieldIndex39,40
type ArrayIndex ArrayIndex40,41
type ArraySize ArraySize41,42
type OpName OpName43,44
data OpOp45,46
  = Plus Plus46,47
  = Plus | Minus Minus46,47
  = Plus | Minus | Times Times46,47
  = Plus | Minus | Times | Divide Divide46,47
  = Plus | Minus | Times | Divide | ModMod46,47
  | Not Not47,48
  | Not | And And47,48
  | Not | And | OrOr47,48
  | Gt Gt48,49
  | Gt | Lt Lt48,49
  | Gt | Lt | Le Le48,49
  | Gt | Lt | Le | Ge Ge48,49
  | Gt | Lt | Le | Ge | Eq Eq48,49
  | Gt | Lt | Le | Ge | Eq | NEqNEq48,49
  | BitAnd BitAnd49,50
  | BitAnd | BitOr BitOr49,50
  | BitAnd | BitOr | BitXor BitXor49,50
  | BitAnd | BitOr | BitXor | LShift LShift49,50
  | BitAnd | BitOr | BitXor | LShift | RShift RShift49,50
  | BitAnd | BitOr | BitXor | LShift | RShift | ComplementComplement49,50
data Pragma Pragma52,53
data Pragma = InlinePragma InlinePragma52,53
            | CInlinePragma CInlinePragma53,54
            | FnMacroPragma FnMacroPragma54,55
            | UnrecPragma UnrecPragma55,56
data Associativity Associativity58,59
data Associativity = LeftAssoc LeftAssoc58,59
                   | RightAssoc RightAssoc59,60
                   | NoAssoc NoAssoc60,61
                   | PrefixPrefix61,62
associativity associativity64,65
associativity x | x `elem`elem65,66
symbolOp symbolOp76,77
opSymbol opSymbol99,100
instance Pretty Pretty Op121,122
  pretty pretty122,123
data Likelihood Likelihood124,125
data Likelihood = Unlikely Unlikely124,125
data Likelihood = Unlikely | Regular Regular124,125
data Likelihood = Unlikely | Regular | Likely Likely124,125
instance Monoid Monoid Likelihood127,128
  mempty mempty128,129
  mappend mappend129,130
instance Semigroup Semigroup Likelihood135,136
  (<(<>)136,137
instance Monoid Monoid Likelihood141,142
  mempty mempty142,143
tagSuccess tagSuccess145,146
tagFail tagFail146,147
data CustTyGenInfo CustTyGenInfo152,153
data CustTyGenInfo = CTGI CTGI152,153
instance Binary Binary CustTyGenInfo154,155

./src/Cogent/Common/Repr.hs,708
module Cogent.Common.Repr Cogent.Common.Repr13,14
data Representation Representation22,23
data Representation = Bits Bits22,23
data Representation = Bits { allocSize allocSize22,23
data Representation = Bits { allocSize :: Int, allocOffset allocOffset22,23
                    | Variant Variant23,24
                    | Variant { tagSize tagSize23,24
                    | Variant { tagSize :: Int, tagOffset tagOffset23,24
                    | Variant { tagSize :: Int, tagOffset :: Int, alternatives alternatives23,24
                    | Record Record24,25
                    | Record { fields fields24,25
instance Binary Binary Representation27,28
dummyRepr dummyRepr30,31

./src/Cogent/Preprocess.hs,502
module Cogent.Preprocess Cogent.Preprocess14,15
language language32,33
data LocPragma LocPragma38,39
data LocPragma = LP LP38,39
data LocPragma = LP { locOfLP locOfLP38,39
                    , pragmaOfLP pragmaOfLP39,40
T.TokenParser T.TokenParser42,43
genericName genericName44,45
variableName variableName48,49
functionName functionName51,52
pragma pragma54,55
inPragmaSingle inPragmaSingle58,59
mkPragmas mkPragmas67,68
program program75,76
preprocess preprocess82,83

./src/Cogent/Simplify.hs,3497
module Cogent.Simplify Cogent.Simplify32,33
type InExpr InExpr61,62
type OutExpr OutExpr62,63
type InVar InVar64,65
type OutVar OutVar65,66
type InAlt InAlt67,68
type OutAlt OutAlt68,69
type OccEnv OccEnv73,74
emptyOccVec emptyOccVec75,76
newtype Occ Occ78,79
newtype Occ v a = Occ { unOcc unOcc78,79
evalOcc evalOcc82,83
execOcc execOcc85,86
runOcc runOcc88,89
parallel parallel91,92
sequential sequential101,102
data OccInfo OccInfo109,110
data OccInfo = DeadDead109,110
             | OnceSafeOnceSafe110,111
             | MultiSafeMultiSafe112,113
             | MultiUnsafeMultiUnsafe113,114
             | LetBangedLetBanged114,115
markOcc markOcc117,118
branchEnv, concatEnv concatEnv164,165
branchEnv,branchEnv164,165
concatEnv concatEnv166,167
branchFuncEnv, concatFuncEnv concatFuncEnv168,169
branchFuncEnv,branchFuncEnv168,169
concatFuncEnv concatFuncEnv170,171
instance Monoid Monoid OccInfo173,174
  mempty mempty174,175
  mappend mappend176,177
instance Semigroup Semigroup OccInfo184,185
  (<(<>)185,186
instance Monoid Monoid OccInfo192,193
  mempty mempty193,194
seqOcc, parOcc parOcc196,197
seqOcc,seqOcc196,197
parOcc parOcc198,199
getVOccs getVOccs201,202
getVOcc1 getVOcc1208,209
getVOcc2 getVOcc2212,213
type FuncEnv FuncEnv219,220
data SimpEnv SimpEnv221,222
data SimpEnv t = SimpEnv SimpEnv221,222
data SimpEnv t = SimpEnv { _funcEnv _funcEnv221,222
                         , _kindEnv _kindEnv222,223
                         , _varCount _varCount223,224
newtype Simp Simp228,229
newtype Simp t a = Simp { unSimp unSimp228,229
evalSimp evalSimp232,233
execSimp execSimp235,236
runSimp runSimp238,239
simplify simplify241,242
simplify1 simplify1245,246
simplifyExpr simplifyExpr256,257
type Subst Subst266,267
type Subst' Subst'267,268
emptySubst emptySubst269,270
data SubstRng SubstRng272,273
data SubstRng t v = DoneEx DoneEx272,273
                  | SuspEx SuspEx273,274
type InScopeSet InScopeSet276,277
type InScopeSet' InScopeSet'277,278
emptyInScopeSet emptyInScopeSet279,280
data VarDef VarDef282,283
data VarDef t v = Unknown Unknown282,283
                | BoundTo BoundTo283,284
data Context Context287,288
data Context t v = StopStop287,288
                 | AppCxt AppCxt288,289
                 | CaseCxt CaseCxt289,290
                 | ArgCxt ArgCxt290,291
                 | InlineCxt InlineCxt291,292
simplExpr simplExpr295,296
  | note `elem`elem305,306
simplExpr simplExpr316,317
considerInline considerInline370,371
rebuild rebuild380,381
isTrivial isTrivial389,390
inline inline397,398
noLinear noLinear407,408
noWorkDup noWorkDup432,433
veryBoring veryBoring435,436
inlineMulti inlineMulti438,439
noSizeIncrease noSizeIncrease443,444
boring boring446,447
smallEnough smallEnough449,450
lowerExpr0 lowerExpr0455,456
lowerFin lowerFin459,460
lowerExpr lowerExpr468,469
liftExpr liftExpr491,492
upshiftExpr upshiftExpr514,515
extSubst extSubst519,520
liftSubst liftSubst522,523
liftSubstRng liftSubstRng525,526
extInScopeSet extInScopeSet529,530
liftInScopeSet liftInScopeSet532,533
liftVarDef liftVarDef535,536
liftContext liftContext540,541
substFin substFin547,548
betaR betaR556,557
  | (maxFin idx) `elem`elem571,572
betaR betaR582,583
lookupKind lookupKind601,602
kindcheck kindcheck604,605
typeNotLinear typeNotLinear606,607

./src/Cogent/Compiler.hs,17162
module Cogent.Compiler Cogent.Compiler15,16
__impossible __impossible29,30
__ghc_t3927 __ghc_t392737,38
__exhaustivity __exhaustivity43,44
__todo __todo46,47
__fixme __fixme50,51
__assert __assert54,55
cogentRelDir cogentRelDir60,61
mkOutputName' mkOutputName'62,63
mkOutputName mkOutputName65,66
nameToFileName nameToFileName68,69
mkFileName' mkFileName'73,74
mkFileName mkFileName79,80
mkHsFileName mkHsFileName82,83
mkHscFileName mkHscFileName83,84
mkProofName mkProofName91,92
mkThyFileName mkThyFileName95,96
data Cogent_WarningSwitch Cogent_WarningSwitch104,105
data Cogent_WarningSwitch = Flag_w Flag_w104,105
data Cogent_WarningSwitch = Flag_w | Flag_Wwarn Flag_Wwarn104,105
data Cogent_WarningSwitch = Flag_w | Flag_Wwarn | Flag_WerrorFlag_Werror104,105
set_flag_absTypeDir set_flag_absTypeDir106,107
set_flag_cogentPpArgs set_flag_cogentPpArgs107,108
set_flag_cpp set_flag_cpp108,109
set_flag_cppArgs set_flag_cppArgs109,110
set_flag_custTyGen set_flag_custTyGen110,111
set_flag_ddumpSmt set_flag_ddumpSmt111,112
set_flag_ddumpTc set_flag_ddumpTc112,113
set_flag_ddumpTcCtx set_flag_ddumpTcCtx113,114
set_flag_ddumpTcFilter set_flag_ddumpTcFilter114,115
set_flag_ddumpToFile set_flag_ddumpToFile115,116
set_flag_ddumpPrettyDsNoTc set_flag_ddumpPrettyDsNoTc116,117
set_flag_distDir set_flag_distDir117,118
set_flag_entryFuncs set_flag_entryFuncs118,119
set_flag_extTypes set_flag_extTypes119,120
set_flag_fakeHeaderDir set_flag_fakeHeaderDir120,121
set_flag_fcheckUndefined set_flag_fcheckUndefined121,122
set_flag_fdisambiguatePp set_flag_fdisambiguatePp122,123
set_flag_fdumpToStdout set_flag_fdumpToStdout123,124
set_flag_fffiCFunctions set_flag_fffiCFunctions124,125
set_flag_fflattenNestings set_flag_fflattenNestings125,126
set_flag_ffncallAsMacro set_flag_ffncallAsMacro126,127
set_flag_ffullSrcPath set_flag_ffullSrcPath127,128
set_flag_ffuncPurityAttr set_flag_ffuncPurityAttr128,129
set_flag_fgenHeader set_flag_fgenHeader129,130
set_flag_fintermediateVars set_flag_fintermediateVars130,131
set_flag_flaxTakePut set_flag_flaxTakePut131,132
set_flag_fletInIf set_flag_fletInIf132,133
set_flag_fletbangInIf set_flag_fletbangInIf133,134
set_flag_fmlTypingTree set_flag_fmlTypingTree134,135
set_flag_fnoCheckUndefined set_flag_fnoCheckUndefined135,136
set_flag_fnoFlattenNestings set_flag_fnoFlattenNestings136,137
set_flag_fnoFncallAsMacro set_flag_fnoFncallAsMacro137,138
set_flag_fnoFuncPurityAttr set_flag_fnoFuncPurityAttr138,139
set_flag_fnoGenHeader set_flag_fnoGenHeader139,140
set_flag_fnoIntermediateVars set_flag_fnoIntermediateVars140,141
set_flag_fnoLaxTakePut set_flag_fnoLaxTakePut141,142
set_flag_fnoLetInIf set_flag_fnoLetInIf142,143
set_flag_fnoLetbangInIf set_flag_fnoLetbangInIf143,144
set_flag_fnoMlTypingTree set_flag_fnoMlTypingTree144,145
set_flag_fnoNormalisation set_flag_fnoNormalisation145,146
set_flag_fnoPragmas set_flag_fnoPragmas146,147
set_flag_fnoPrettyErrmsgs set_flag_fnoPrettyErrmsgs147,148
set_flag_fnoReverseTcErrors set_flag_fnoReverseTcErrors148,149
set_flag_fnormalisation set_flag_fnormalisation149,150
set_flag_fnoShareLinearVars set_flag_fnoShareLinearVars152,153
set_flag_fnoShowTypesInPretty set_flag_fnoShowTypesInPretty153,154
set_flag_fnoSimplifier set_flag_fnoSimplifier154,155
set_flag_fnoStaticInline set_flag_fnoStaticInline155,156
set_flag_fnoTcCtxConstraints set_flag_fnoTcCtxConstraints156,157
set_flag_fnoTpWithBodies set_flag_fnoTpWithBodies157,158
set_flag_fnoTpWithDecls set_flag_fnoTpWithDecls158,159
set_flag_fnoTuplesAsSugar set_flag_fnoTuplesAsSugar159,160
set_flag_fnoUnionForVariants set_flag_fnoUnionForVariants160,161
set_flag_fnoUntypedFuncEnum set_flag_fnoUntypedFuncEnum161,162
set_flag_fnoUseCompoundLiterals set_flag_fnoUseCompoundLiterals162,163
set_flag_fnoWrapPutInLet set_flag_fnoWrapPutInLet163,164
set_flag_fpragmas set_flag_fpragmas164,165
set_flag_fprettyErrmsgs set_flag_fprettyErrmsgs165,166
set_flag_freverseTcErrors set_flag_freverseTcErrors166,167
set_flag_fshareLinearVars set_flag_fshareLinearVars167,168
set_flag_fshowTypesInPretty set_flag_fshowTypesInPretty168,169
set_flag_fsimplifier set_flag_fsimplifier169,170
set_flag_fsimplifierIterations set_flag_fsimplifierIterations170,171
set_flag_fstaticInline set_flag_fstaticInline171,172
set_flag_ftcCtxConstraints set_flag_ftcCtxConstraints172,173
set_flag_ftcCtxLen set_flag_ftcCtxLen173,174
set_flag_ftpWithBodies set_flag_ftpWithBodies174,175
set_flag_ftpWithDecls set_flag_ftpWithDecls175,176
set_flag_ftuplesAsSugar set_flag_ftuplesAsSugar176,177
set_flag_funionForVariants set_flag_funionForVariants177,178
set_flag_funtypedFuncEnum set_flag_funtypedFuncEnum178,179
set_flag_fuseCompoundLiterals set_flag_fuseCompoundLiterals179,180
set_flag_fwrapPutInLet set_flag_fwrapPutInLet180,181
set_flag_inferCFunc set_flag_inferCFunc181,182
set_flag_inferCType set_flag_inferCType182,183
set_flag_interactive set_flag_interactive183,184
set_flag_nameCache set_flag_nameCache184,185
set_flag_O set_flag_O185,186
set_flag_outputName set_flag_outputName206,207
set_flag_proofInputC set_flag_proofInputC207,208
set_flag_proofName set_flag_proofName208,209
set_flag_pruneCallGraph set_flag_pruneCallGraph209,210
set_flag_quiet set_flag_quiet210,211
set_flag_rootDir set_flag_rootDir211,212
set_flag_w set_flag_w212,213
set_flag_Wall set_flag_Wall213,214
set_flag_Werror set_flag_Werror217,218
set_flag_WdodgyTakePut set_flag_WdodgyTakePut218,219
set_flag_WdynamicVariantPromotion set_flag_WdynamicVariantPromotion219,220
set_flag_WimplicitIntLitPromotion set_flag_WimplicitIntLitPromotion220,221
set_flag_Wmono set_flag_Wmono221,222
set_flag_WnoDodgyTakePut set_flag_WnoDodgyTakePut222,223
set_flag_WnoDynamicVariantPromotion set_flag_WnoDynamicVariantPromotion223,224
set_flag_WnoImplicitIntLitPromotion set_flag_WnoImplicitIntLitPromotion224,225
set_flag_WnoMono set_flag_WnoMono225,226
set_flag_WnoUnusedLocalBinds set_flag_WnoUnusedLocalBinds226,227
set_flag_WunusedLocalBinds set_flag_WunusedLocalBinds227,228
set_flag_Wwarn set_flag_Wwarn228,229
set_flag_type_proof_sorry_before set_flag_type_proof_sorry_before230,231
__cogent_abs_type_dir __cogent_abs_type_dir232,233
__cogent_abs_type_dir_ref __cogent_abs_type_dir_ref235,236
__cogent_cogent_pp_args __cogent_cogent_pp_args239,240
__cogent_cogent_pp_args_ref __cogent_cogent_pp_args_ref242,243
__cogent_cpp __cogent_cpp246,247
__cogent_cpp_ref __cogent_cpp_ref249,250
__cogent_cpp_args __cogent_cpp_args253,254
__cogent_cpp_args_ref __cogent_cpp_args_ref256,257
__cogent_cust_ty_gen __cogent_cust_ty_gen260,261
__cogent_cust_ty_gen_ref __cogent_cust_ty_gen_ref263,264
__cogent_ddump_smt __cogent_ddump_smt267,268
__cogent_ddump_smt_ref __cogent_ddump_smt_ref270,271
__cogent_ddump_tc __cogent_ddump_tc274,275
__cogent_ddump_tc_ref __cogent_ddump_tc_ref277,278
__cogent_ddump_tc_ctx __cogent_ddump_tc_ctx281,282
__cogent_ddump_tc_ctx_ref __cogent_ddump_tc_ctx_ref284,285
__cogent_ddump_tc_filter __cogent_ddump_tc_filter288,289
__cogent_ddump_tc_filter_ref __cogent_ddump_tc_filter_ref291,292
__cogent_ddump_to_file __cogent_ddump_to_file295,296
__cogent_ddump_to_file_ref __cogent_ddump_to_file_ref298,299
__cogent_ddump_pretty_ds_no_tc __cogent_ddump_pretty_ds_no_tc302,303
__cogent_ddump_pretty_ds_no_tc_ref __cogent_ddump_pretty_ds_no_tc_ref305,306
__cogent_dist_dir __cogent_dist_dir309,310
__cogent_dist_dir_ref __cogent_dist_dir_ref312,313
__cogent_entry_funcs __cogent_entry_funcs316,317
__cogent_entry_funcs_ref __cogent_entry_funcs_ref319,320
__cogent_ext_types __cogent_ext_types323,324
__cogent_ext_types_ref __cogent_ext_types_ref326,327
__cogent_ext_of_afm __cogent_ext_of_afm332,333
__cogent_ext_of_afm_ref __cogent_ext_of_afm_ref335,336
__cogent_ext_of_atm __cogent_ext_of_atm339,340
__cogent_ext_of_atm_ref __cogent_ext_of_atm_ref342,343
__cogent_ext_of_c_type_table __cogent_ext_of_c_type_table346,347
__cogent_ext_of_c_type_table_ref __cogent_ext_of_c_type_table_ref349,350
__cogent_ext_of_c __cogent_ext_of_c353,354
__cogent_ext_of_h __cogent_ext_of_h356,357
__cogent_ext_of_hs __cogent_ext_of_hs359,360
__cogent_ext_of_hsc __cogent_ext_of_hsc362,363
__cogent_ext_of_thy __cogent_ext_of_thy365,366
__cogent_ext_of_ac __cogent_ext_of_ac368,369
__cogent_ext_of_ah __cogent_ext_of_ah371,372
__cogent_fake_header_dir __cogent_fake_header_dir376,377
__cogent_fake_header_dir_ref __cogent_fake_header_dir_ref379,380
__cogent_fcheck_undefined __cogent_fcheck_undefined383,384
__cogent_fcheck_undefined_ref __cogent_fcheck_undefined_ref386,387
__cogent_fdisambiguate_pp __cogent_fdisambiguate_pp397,398
__cogent_fdisambiguate_pp_ref __cogent_fdisambiguate_pp_ref400,401
__cogent_fdump_to_stdout __cogent_fdump_to_stdout404,405
__cogent_fdump_to_stdout_ref __cogent_fdump_to_stdout_ref407,408
__cogent_fffi_c_functions __cogent_fffi_c_functions411,412
__cogent_fffi_c_functions_ref __cogent_fffi_c_functions_ref414,415
__cogent_fflatten_nestings __cogent_fflatten_nestings418,419
__cogent_fflatten_nestings_ref __cogent_fflatten_nestings_ref421,422
__cogent_ffncall_as_macro __cogent_ffncall_as_macro425,426
__cogent_ffncall_as_macro_ref __cogent_ffncall_as_macro_ref428,429
__cogent_ffull_src_path __cogent_ffull_src_path432,433
__cogent_ffull_src_path_ref __cogent_ffull_src_path_ref435,436
__cogent_ffunc_purity_attr __cogent_ffunc_purity_attr439,440
__cogent_ffunc_purity_attr_ref __cogent_ffunc_purity_attr_ref442,443
__cogent_fgen_header __cogent_fgen_header446,447
__cogent_fgen_header_ref __cogent_fgen_header_ref449,450
__cogent_fintermediate_vars __cogent_fintermediate_vars453,454
__cogent_fintermediate_vars_ref __cogent_fintermediate_vars_ref456,457
__cogent_flax_take_put __cogent_flax_take_put460,461
__cogent_flax_take_put_ref __cogent_flax_take_put_ref463,464
__cogent_flet_in_if __cogent_flet_in_if467,468
__cogent_flet_in_if_ref __cogent_flet_in_if_ref470,471
__cogent_fletbang_in_if __cogent_fletbang_in_if474,475
__cogent_fletbang_in_if_ref __cogent_fletbang_in_if_ref477,478
__cogent_fml_typing_tree __cogent_fml_typing_tree481,482
__cogent_fml_typing_tree_ref __cogent_fml_typing_tree_ref484,485
data NF NF489,490
data NF = NoNF NoNF489,490
data NF = NoNF | ANF ANF489,490
data NF = NoNF | ANF | KNF KNF489,490
data NF = NoNF | ANF | KNF | LNF LNF489,490
__cogent_fnormalisation __cogent_fnormalisation491,492
__cogent_fnormalisation_ref __cogent_fnormalisation_ref494,495
__cogent_fpragmas __cogent_fpragmas498,499
__cogent_fpragmas_ref __cogent_fpragmas_ref501,502
__cogent_fpretty_errmsgs __cogent_fpretty_errmsgs505,506
__cogent_fpretty_errmsgs_ref __cogent_fpretty_errmsgs_ref508,509
__cogent_freverse_tc_errors __cogent_freverse_tc_errors512,513
__cogent_freverse_tc_errors_ref __cogent_freverse_tc_errors_ref515,516
__cogent_fshare_linear_vars __cogent_fshare_linear_vars519,520
__cogent_fshare_linear_vars_ref __cogent_fshare_linear_vars_ref522,523
__cogent_fshow_types_in_pretty __cogent_fshow_types_in_pretty526,527
__cogent_fshow_types_in_pretty_ref __cogent_fshow_types_in_pretty_ref529,530
__cogent_fsimplifier __cogent_fsimplifier533,534
__cogent_fsimplifier_ref __cogent_fsimplifier_ref536,537
__cogent_fsimplifier_iterations __cogent_fsimplifier_iterations540,541
__cogent_fsimplifier_iterations_ref __cogent_fsimplifier_iterations_ref543,544
__cogent_fstatic_inline __cogent_fstatic_inline547,548
__cogent_fstatic_inline_ref __cogent_fstatic_inline_ref550,551
__cogent_ftc_ctx_constraints __cogent_ftc_ctx_constraints554,555
__cogent_ftc_ctx_constraints_ref __cogent_ftc_ctx_constraints_ref557,558
__cogent_ftc_ctx_len __cogent_ftc_ctx_len561,562
__cogent_ftc_ctx_len_ref __cogent_ftc_ctx_len_ref564,565
__cogent_ftp_with_bodies __cogent_ftp_with_bodies568,569
__cogent_ftp_with_bodies_ref __cogent_ftp_with_bodies_ref571,572
__cogent_ftp_with_decls __cogent_ftp_with_decls575,576
__cogent_ftp_with_decls_ref __cogent_ftp_with_decls_ref578,579
__cogent_ftuples_as_sugar __cogent_ftuples_as_sugar582,583
__cogent_ftuples_as_sugar_ref __cogent_ftuples_as_sugar_ref585,586
__cogent_funboxed_arg_by_ref __cogent_funboxed_arg_by_ref590,591
__cogent_funboxed_arg_ref_size_threshold __cogent_funboxed_arg_ref_size_threshold594,595
__cogent_funboxed_multi_param __cogent_funboxed_multi_param603,604
__cogent_funboxed_loose __cogent_funboxed_loose611,612
__cogent_funion_for_variants __cogent_funion_for_variants614,615
__cogent_funion_for_variants_ref __cogent_funion_for_variants_ref617,618
__cogent_funtyped_func_enum __cogent_funtyped_func_enum621,622
__cogent_funtyped_func_enum_ref __cogent_funtyped_func_enum_ref624,625
__cogent_fuse_compound_literals __cogent_fuse_compound_literals628,629
__cogent_fuse_compound_literals_ref __cogent_fuse_compound_literals_ref631,632
__cogent_fwrap_put_in_let __cogent_fwrap_put_in_let635,636
__cogent_fwrap_put_in_let_ref __cogent_fwrap_put_in_let_ref638,639
__cogent_infer_c_func_files __cogent_infer_c_func_files642,643
__cogent_infer_c_func_files_ref __cogent_infer_c_func_files_ref645,646
__cogent_infer_c_type_files __cogent_infer_c_type_files649,650
__cogent_infer_c_type_files_ref __cogent_infer_c_type_files_ref652,653
__cogent_interactive __cogent_interactive656,657
__cogent_interactive_ref __cogent_interactive_ref659,660
__cogent_name_cache __cogent_name_cache663,664
__cogent_name_cache_ref __cogent_name_cache_ref666,667
__cogent_output_name __cogent_output_name670,671
__cogent_output_name_ref __cogent_output_name_ref673,674
__cogent_proof_input_c __cogent_proof_input_c677,678
__cogent_proof_input_c_ref __cogent_proof_input_c_ref680,681
__cogent_proof_name __cogent_proof_name686,687
__cogent_proof_name_ref __cogent_proof_name_ref689,690
__cogent_prune_call_graph __cogent_prune_call_graph693,694
__cogent_prune_call_graph_ref __cogent_prune_call_graph_ref696,697
__cogent_quiet __cogent_quiet700,701
__cogent_quiet_ref __cogent_quiet_ref703,704
__cogent_root_name __cogent_root_name707,708
__cogent_build_info_name __cogent_build_info_name710,711
__cogent_root_dir __cogent_root_dir713,714
__cogent_root_dir_ref __cogent_root_dir_ref716,717
__cogent_suffix_of_all_refine __cogent_suffix_of_all_refine726,727
__cogent_suffix_of_ac_install __cogent_suffix_of_ac_install729,730
__cogent_suffix_of_corres_setup __cogent_suffix_of_corres_setup732,733
__cogent_suffix_of_corres_proof __cogent_suffix_of_corres_proof735,736
__cogent_suffix_of_mono_proof __cogent_suffix_of_mono_proof738,739
__cogent_suffix_of_normal_proof __cogent_suffix_of_normal_proof741,742
__cogent_suffix_of_type_proof __cogent_suffix_of_type_proof744,745
__cogent_suffix_of_shallow __cogent_suffix_of_shallow747,748
__cogent_suffix_of_recover_tuples __cogent_suffix_of_recover_tuples750,751
__cogent_suffix_of_shallow_tuples_proof __cogent_suffix_of_shallow_tuples_proof753,754
__cogent_suffix_of_shallow_shared __cogent_suffix_of_shallow_shared756,757
__cogent_suffix_of_shallow_consts __cogent_suffix_of_shallow_consts759,760
__cogent_suffix_of_deep __cogent_suffix_of_deep762,763
__cogent_suffix_of_scorres __cogent_suffix_of_scorres765,766
__cogent_suffix_of_stage __cogent_suffix_of_stage768,769
__cogent_suffix_of_ffi __cogent_suffix_of_ffi777,778
__cogent_suffix_of_ffi_types __cogent_suffix_of_ffi_types780,781
__cogent_suffix_of_pp __cogent_suffix_of_pp787,788
__cogent_suffix_of_pp_ref __cogent_suffix_of_pp_ref790,791
__cogent_suffix_of_inferred __cogent_suffix_of_inferred794,795
__cogent_suffix_of_inferred_ref __cogent_suffix_of_inferred_ref797,798
__cogent_warning_switch __cogent_warning_switch803,804
__cogent_warning_switch_ref __cogent_warning_switch_ref806,807
__cogent_wdodgy_take_put __cogent_wdodgy_take_put810,811
__cogent_wdodgy_take_put_ref __cogent_wdodgy_take_put_ref813,814
__cogent_wdynamic_variant_promotion __cogent_wdynamic_variant_promotion817,818
__cogent_wdynamic_variant_promotion_ref __cogent_wdynamic_variant_promotion_ref820,821
__cogent_wimplicit_int_lit_promotion __cogent_wimplicit_int_lit_promotion824,825
__cogent_wimplicit_int_lit_promotion_ref __cogent_wimplicit_int_lit_promotion_ref827,828
__cogent_wmono __cogent_wmono831,832
__cogent_wmono_ref __cogent_wmono_ref834,835
__cogent_wunused_local_binds __cogent_wunused_local_binds838,839
__cogent_wunused_local_binds_ref __cogent_wunused_local_binds_ref841,842
__cogent_current_dir __cogent_current_dir847,848
__cogent_current_dir_ref __cogent_current_dir_ref850,851
__cogent_simpl_cg __cogent_simpl_cg856,857
__cogent_dump_handle __cogent_dump_handle860,861
__cogent_type_proof_sorry_before __cogent_type_proof_sorry_before866,867
__cogent_type_proof_sorry_before_ref __cogent_type_proof_sorry_before_ref869,870
preDump preDump876,877
postDump postDump883,884
dumpMsg dumpMsg890,891

./src/Cogent/Parser.hs,1513
module Cogent.Parser Cogent.Parser15,16
type Parser Parser51,52
newtype S S53,54
newtype S = ParserState ParserState53,54
newtype S = ParserState { avoidInit avoidInit53,54
language language56,57
T.TokenParser T.TokenParser68,69
sepByAligned1 sepByAligned170,71
manyAligned1Until manyAligned1Until72,73
variableName variableName84,85
typeConName typeConName87,88
avoidInitial avoidInitial91,92
repDecl repDecl96,97
repSize repSize99,100
repExpr repExpr104,105
irrefutablePattern irrefutablePattern116,117
pattern = =140,141
boolean boolean149,150
expr expr156,157
matchExpr matchExpr189,190
matchExpr' matchExpr'196,197
alternative alternative207,208
multiWayIf multiWayIf209,210
matchArrow matchArrow215,216
basicExpr basicExpr219,220
basicExpr' basicExpr'222,223
term term258,259
var var275,276
tuple tuple280,281
recordAssignment recordAssignment284,285
wildcard wildcard288,289
recAssign recAssign290,291
recAssignsAndOrWildcard recAssignsAndOrWildcard292,293
docHunk docHunk311,312
monotype monotype313,314
polytype polytype372,373
kindSignature kindSignature375,376
docBlock docBlock387,388
toplevel toplevel389,390
toplevel' toplevel'393,394
program program423,424
parseWithIncludes parseWithIncludes445,446
loadTransitive' loadTransitive'455,456
parseCustTyGen parseCustTyGen490,491
tygenfile tygenfile493,494
tygen tygen495,496
parseFromFile parseFromFile503,504
cppLineTokenParser cppLineTokenParser512,513

./src/Cogent/Normal.hs,712
module Cogent.Normal Cogent.Normal21,22
isVar isVar37,38
isAtom isAtom41,42
isNormal isNormal65,66
newtype AN AN84,85
newtype AN a = AN { runAN runAN84,85
freshVarPrefix freshVarPrefix87,88
freshVar freshVar89,90
normal normal94,95
verifyNormal verifyNormal97,98
normaliseDefinition normaliseDefinition105,106
normaliseExpr normaliseExpr109,110
upshiftExpr upshiftExpr112,113
normalise normalise117,118
  | __cogent_fnormalisation `elem`elem146,147
normalise normalise154,155
normaliseAtom normaliseAtom204,205
wrapPut wrapPut224,225
normaliseName normaliseName235,236
normaliseNames normaliseNames240,241
insertIdxAt insertIdxAt249,250
isCondition isCondition282,283

./src/Cogent/GetOpt.hs,1095
module Cogent.GetOpt Cogent.GetOpt51,52
data ArgOrder ArgOrder79,80
  = RequireOrder RequireOrder80,81
  | Permute Permute81,82
  | ReturnInOrder ReturnInOrder82,83
data OptDescr OptDescr97,98
   Option Option98,99
data ArgDescr ArgDescr106,107
   = NoArg NoArg107,108
   | ReqArg ReqArg108,109
   | OptArg OptArg109,110
instance Functor Functor ArgOrder111,112
    fmap fmap112,113
instance Functor Functor OptDescr116,117
    fmap fmap117,118
instance Functor Functor ArgDescr119,120
    fmap fmap120,121
data OptKind OptKind124,125
   = Opt Opt125,126
   | UnreqOpt UnreqOpt126,127
   | NonOpt NonOpt127,128
   | EndOfOpts EndOfOpts128,129
   | OptErr OptErr129,130
usageInfo usageInfo134,135
usageInfoImportant usageInfoImportant144,145
fmtOpt fmtOpt153,154
fmtShort fmtShort164,165
fmtLong fmtLong169,170
getOpt getOpt188,189
getOpt' getOpt'200,201
getNext getNext220,221
longOpt longOpt227,228
shortOpt shortOpt248,249
errAmbig errAmbig267,268
errReq errReq271,272
errUnrec errUnrec274,275
errNoArg errNoArg277,278

./src/Cogent/Util.hs,3186
module Cogent.Util Cogent.Util24,25
(<(<<+=)50,51
newtype Flip Flip54,55
newtype Flip  f (a :: a') (b :: b') = Flip { unflip unflip54,55
newtype Flip2 Flip255,56
newtype Flip2 f (a :: a') (b :: b') (c :: c') = Flip2 { unflip2 unflip255,56
newtype Flip3 Flip356,57
newtype Flip3 f (a :: a') (b :: b') (c :: c') (d :: d') = Flip3 { unflip3 unflip356,57
flip3 flip358,59
ffmap ffmap61,62
fffmap fffmap64,65
ffffmap ffffmap67,68
mmapM mmapM70,71
mmmapM mmmapM73,74
mmmmapM mmmmapM76,77
ttraverse ttraverse79,80
tttraverse tttraverse82,83
ttttraverse ttttraverse85,86
cap cap91,92
decap decap96,97
toIsaThyName toIsaThyName100,101
toHsModName toHsModName103,104
toHsTypeName toHsTypeName104,105
toHsTermName toHsTermName105,106
toCName toCName107,108
dehyphens dehyphens110,111
relDir relDir120,121
type Warning Warning165,166
firstM firstM167,168
secondM secondM170,171
fst3 fst3173,174
snd3 snd3176,177
thd3 thd3179,180
fst4 fst4182,183
for for185,186
(*(***^^)190,191
first3 first3193,194
second3 second3196,197
third3 third3199,200
first4 first4202,203
second4 second4205,206
third4 third4208,209
fourth4 fourth4211,212
extTup3r extTup3r214,215
extTup2l extTup2l217,218
concatTup2 concatTup2221,222
whenM whenM227,228
whenMM whenMM230,231
nubByM nubByM235,236
(<(<*=)240,241
a a241,242
takeWhileM' takeWhileM'247,248
fmapFold fmapFold256,257
fmapFoldM fmapFoldM259,260
foldMapM foldMapM265,266
mapAccumLM mapAccumLM269,270
unionWithKeyM unionWithKeyM276,277
delimiter delimiter290,291
data Stage Stage297,298
data Stage = STGParse STGParse297,298
data Stage = STGParse | STGTypeCheck STGTypeCheck297,298
data Stage = STGParse | STGTypeCheck | STGDesugar STGDesugar297,298
data Stage = STGParse | STGTypeCheck | STGDesugar | STGNormal STGNormal297,298
data Stage = STGParse | STGTypeCheck | STGDesugar | STGNormal | STGSimplify STGSimplify297,298
data Stage = STGParse | STGTypeCheck | STGDesugar | STGNormal | STGSimplify | STGMono STGMono297,298
data Stage = STGParse | STGTypeCheck | STGDesugar | STGNormal | STGSimplify | STGMono | STGCodeGenSTGCodeGen297,298
type NameMod NameMod300,301
getCogentVersion getCogentVersion304,305
getCogentVersionWithoutGit getCogentVersionWithoutGit310,311
getHdrsDir getHdrsDir313,314
overrideStdGumDirWith overrideStdGumDirWith317,318
getStdGumDir getStdGumDir321,322
getStdIncFullPath getStdIncFullPath324,325
overlapping overlapping329,330
u8MAX, u16MAX, u32MAX u32MAX339,340
u8MAX, u16MAX,u16MAX339,340
u8MAX,u8MAX339,340
u16MAX u16MAX341,342
u32MAX u32MAX342,343
data Bound Bound344,345
data Bound = GLB GLB344,345
data Bound = GLB | LUB LUB344,345
instance Show Show Bound346,347
  show show347,348
theOtherB theOtherB350,351
spanList spanList356,357
breakList breakList364,365
split split367,368
replace replace377,378
joinWith joinWith380,381
concatMapM concatMapM386,387
allM allM390,391
andM andM394,395
ifThenElse ifThenElse397,398
ifM ifM400,401
exceptT exceptT405,406
(.(.*)415,416
(c(cd.*abc)416,417
(.(.**)418,419
(d(de.**abcd)419,420

./src/Cogent/Isabelle/Shallow.hs,4353
module Cogent.Isabelle.ShallowCogent.Isabelle.Shallow24,25
_fixHighlighting _fixHighlighting72,73
type MapTypeName MapTypeName74,75
data SGTables SGTables76,77
data SGTables = SGTables SGTables76,77
data SGTables = SGTables { typeStrs typeStrs76,77
                         , typeNameMap typeNameMap77,78
                         , typeVars typeVars78,79
                         , recoverTuples recoverTuples79,80
type MapConcTypeSyn MapConcTypeSyn82,83
data StateGen StateGen84,85
data StateGen = StateGen StateGen84,85
    _varNameGen _varNameGen85,86
    _concTypeSyns _concTypeSyns86,87
newtype SG SG91,92
newtype SG a = SG { runSG runSG91,92
isaReservedNames isaReservedNames97,98
shallowTVar shallowTVar99,100
shallowTypeWithName shallowTypeWithName102,103
shallowRecTupleType shallowRecTupleType105,106
shallowType shallowType108,109
shallowPrimType shallowPrimType125,126
shallowPrimOp shallowPrimOp135,136
snm snm160,161
list2 list2176,177
shallowILit shallowILit178,179
findType findType182,183
findShortType findShortType186,187
findTypeSyn findTypeSyn193,194
shallowExpr shallowExpr196,197
mkL mkL275,276
mkLetds mkLetds278,279
mkLet mkLet281,282
shallowLet shallowLet289,290
mkStr mkStr292,293
mkPrettyPair mkPrettyPair295,296
mkLambdaE mkLambdaE298,299
isRecTuple isRecTuple303,304
shallowMaker shallowMaker308,309
shallowSetter shallowSetter318,319
shallowGetter shallowGetter324,325
getRecordFieldName getRecordFieldName327,328
typarUpd typarUpd336,337
sanitizeType sanitizeType339,340
hashType hashType349,350
shallowTypeDefSaveSyn:shallowTypeDefSaveSyn357,358
shallowTypeDef shallowTypeDef367,368
typeNameFromIdx typeNameFromIdx375,376
simpLemma simpLemma378,379
mkPrettyTuple mkPrettyTuple389,390
recTupleAccessors recTupleAccessors392,393
recTuplePrefix recTuplePrefix408,409
recTupleName recTupleName411,412
recTupleDecls recTupleDecls414,415
shallowTupleType shallowTupleType417,418
fieldConjValRel fieldConjValRel422,423
data DeclT DeclT427,428
data DeclT = RecordT RecordT427,428
data DeclT = RecordT | VariantTVariantT427,428
shallowTT shallowTT429,430
filterDuplicates filterDuplicates483,484
stsyn stsyn490,491
synAllTypeStr synAllTypeStr493,494
shallowTypeFromTable shallowTypeFromTable498,499
lemmaBuckets lemmaBuckets512,513
mlFragment mlFragment529,530
mangleNames mangleNames539,540
defineLemmaBucket defineLemmaBucket542,543
data SCorresCaseData SCorresCaseData550,551
data SCorresCaseData = SCCD SCCD550,551
data SCorresCaseData = SCCD { bigType bigType550,551
                            , typeStr typeStr551,552
                            , tag tag552,553
                     | SCED SCED554,555
                     | SCED { bigType bigType554,555
                            , typeStr typeStr555,556
                            , tag tag556,557
                     | SCFD SCFD558,559
                     | SCFD { bigType bigType558,559
                            , typeStr typeStr559,560
                     | SCCN SCCN561,562
                     | SCCN { tag tag561,562
                            , bigType bigType562,563
scorresCaseExpr scorresCaseExpr566,567
data CaseLemmaBuckets CaseLemmaBuckets585,586
data CaseLemmaBuckets = CaseLemmaBuckets CaseLemmaBuckets585,586
instance Monoid Monoid CaseLemmaBuckets588,589
  mempty mempty589,590
  mappend mappend590,591
instance Semigroup Semigroup CaseLemmaBuckets593,594
  CaseLemmaBuckets CaseLemmaBuckets594,595
instance Monoid Monoid CaseLemmaBuckets596,597
  mempty mempty597,598
caseLemmaBuckets caseLemmaBuckets600,601
toCaseLemma toCaseLemma606,607
scorresCaseDef scorresCaseDef710,711
scorresStructLemma scorresStructLemma720,721
scorresStructFieldLemma scorresStructFieldLemma734,735
scorresStructLemmas, scorresFieldLemmas scorresFieldLemmas745,746
scorresStructLemmas,scorresStructLemmas745,746
scorresFieldLemmas scorresFieldLemmas754,755
shallowDefinition shallowDefinition766,767
shallowDefinitions shallowDefinitions788,789
shallowFile shallowFile792,793
shallow shallow826,827
genConstDecl genConstDecl834,835
shallowConsts shallowConsts842,843
shallowTuplesProof shallowTuplesProof868,869
mapInitLast mapInitLast1092,1093

./src/Cogent/Isabelle/MonoProof.hs,176
module Cogent.Isabelle.MonoProof Cogent.Isabelle.MonoProof15,16
monoProof monoProof36,37
monoRename monoRename49,50
monoExprThms monoExprThms56,57
rename rename94,95

./src/Cogent/Isabelle/ACInstall.hs,222
module Cogent.Isabelle.ACInstall Cogent.Isabelle.ACInstall11,12
class ML ML15,16
  hs2ml hs2ml16,17
instance ML ML Bool18,19
  hs2ml hs2ml19,20
acInstallDefault acInstallDefault24,25
acInstall acInstall28,29

./src/Cogent/Isabelle/TypeProofs.hs,2146
module Cogent.Isabelle.TypeProofs Cogent.Isabelle.TypeProofs27,28
data TypeSplitKind TypeSplitKind64,65
data TypeSplitKind = TSK_R TSK_R64,65
data TypeSplitKind = TSK_R | TSK_L TSK_L64,65
data TypeSplitKind = TSK_R | TSK_L | TSK_S TSK_S64,65
data TypeSplitKind = TSK_R | TSK_L | TSK_S | TSK_NSTSK_NS64,65
data TypingTree TypingTree66,67
data TypingTree t = TyTrLeafTyTrLeaf66,67
                  | TyTrSplit TyTrSplit67,68
type TreeCtx TreeCtx68,69
deepTypeProof deepTypeProof70,71
splitEvery splitEvery97,98
splitEveryW splitEveryW100,101
formatMLProof formatMLProof107,108
formatSubproof formatSubproof118,119
formatMLTreeGen formatMLTreeGen128,129
formatMLTreeFinalise formatMLTreeFinalise137,138
formatTypecorrectProof formatTypecorrectProof145,146
data TreeSteps TreeSteps159,160
data TreeSteps a = StepDown StepDown159,160
data TreeSteps a = StepDown | StepUp StepUp159,160
data TreeSteps a = StepDown | StepUp | Val Val159,160
flattenHintTree flattenHintTree162,163
proveSorry proveSorry166,167
prove prove177,178
proofs proofs189,190
funTypeTree funTypeTree197,198
funTypeTrees funTypeTrees202,203
badHackSplitOnSorryBefore badHackSplitOnSorryBefore207,208
deepTyTreeDef deepTyTreeDef216,217
deepTypeSplitKind deepTypeSplitKind221,222
deepTreeSplits deepTreeSplits227,228
deepCtx deepCtx237,238
deepCtxTree deepCtxTree240,241
escapedFunName escapedFunName246,247
escapedFunName fn | '\'' `elem`elem247,248
isaTypeName isaTypeName256,257
isaName isaName262,263
funTypeCase funTypeCase264,265
funTypeEnv funTypeEnv271,272
funTypeEnv' funTypeEnv'274,275
funDefCase funDefCase281,282
funDefEnv funDefEnv286,287
funDefEnv' funDefEnv'289,290
(<(<\>)292,293
setAt setAt300,301
recTaken recTaken305,306
recType recType306,307
bangEnv bangEnv308,309
unbangEnv unbangEnv312,313
selectEnv selectEnv317,318
splitEnv splitEnv322,323
pushDown pushDown414,415
treeSplit treeSplit506,507
treeSplits treeSplits513,514
treeBang treeBang520,521
treeBang i is (x:xs) | i `elem`elem521,522
treeBang treeBang523,524
typeTree typeTree525,526

./src/Cogent/Isabelle/Compound.hs,162
module Cogent.Isabelle.CompoundCogent.Isabelle.Compound21,22
takeFlatCase takeFlatCase50,51
expDiscardVar expDiscardVar98,99
discardVar discardVar145,146

./src/Cogent/Isabelle/IsabelleName.hs,370
module Cogent.Isabelle.IsabelleName Cogent.Isabelle.IsabelleName10,11
newtype IsabelleName IsabelleName27,28
newtype IsabelleName = IsabelleName { unIsabelleName unIsabelleName27,28
safeName safeName36,37
isReserved isReserved48,49
isInvalid isInvalid51,52
badName badName55,56
mkIsabelleName mkIsabelleName63,64
editIsabelleName editIsabelleName66,67

./src/Cogent/Isabelle/AllRefine.hs,295
module Cogent.Isabelle.AllRefine Cogent.Isabelle.AllRefine10,11
allRefine allRefine21,22
typeProof typeProof37,38
exportThms exportThms63,64
initFinalLocale initFinalLocale105,106
sublocales sublocales116,117
contextFinal contextFinal128,129
genFinalLemmas genFinalLemmas135,136

./src/Cogent/Isabelle/Root.hs,73
module Cogent.Isabelle.Root Cogent.Isabelle.Root10,11
root root17,18

./src/Cogent/Isabelle/CorresSetup.hs,261
module Cogent.Isabelle.CorresSetup Cogent.Isabelle.CorresSetup10,11
corresSetup corresSetup20,21
imports imports31,32
libRel libRel42,43
updSemInit updSemInit63,64
cHeapTypeClass cHeapTypeClass71,72
localSetup localSetup79,80
locale locale85,86

./src/Cogent/Isabelle/GraphGen.hs,3646
module Cogent.Isabelle.GraphGen Cogent.Isabelle.GraphGen13,14
type GM GM31,32
failure failure33,34
abort abort36,37
type VarEnv VarEnv39,40
type GError GError40,41
type GBool GBool41,42
data NextNodeNextNode43,44
    = NextNode NextNode44,45
    = NextNode Int | Ret Ret44,45
    = NextNode Int | Ret | ErrErr44,45
data GraphNodeGraphNode47,48
    = GBasic GBasic48,49
    | GCond GCond49,50
    | GCall GCall50,51
data FunctionGraph FunctionGraph53,54
data FunctionGraph = FunctionGraph FunctionGraph53,54
                   | FunctionGraphError FunctionGraphError54,55
                   | FunctionGraphTypeError FunctionGraphTypeError55,56
data Graph Graph58,59
data Graph = Graph Graph58,59
data GOpGOp61,62
    = PlusPlus62,63
    | MinusMinus63,64
    | TimesTimes64,65
    | DividedByDividedBy65,66
    | ModulusModulus66,67
    | EqualsEquals67,68
    | SignedLessSignedLess68,69
    | SignedLessEqualsSignedLessEquals69,70
    | MemUpdateMemUpdate70,71
    | MemAccMemAcc71,72
    | WordCastWordCast72,73
    | BWXORBWXOR73,74
    | NotNot74,75
    | AndAnd75,76
    | OrOr76,77
    | BWAndBWAnd77,78
    | BWOrBWOr78,79
    | ShiftLeftShiftLeft79,80
    | ShiftRightShiftRight80,81
    | BWNotBWNot81,82
data GTyp GTyp84,85
data GTyp = GBoolT GBoolT84,85
data GTyp = GBoolT | GWordT GWordT84,85
data GTyp = GBoolT | GWordT Int | GMemGMem84,85
data GExprGExpr87,88
    = GVariable GVariable88,89
    | GOp GOp89,90
    | GBool GBool90,91
    | GNum GNum91,92
data IsUnboxed IsUnboxed94,95
data IsUnboxed = IsUnboxed IsUnboxed94,95
data IsUnboxed = IsUnboxed | NotUnboxedNotUnboxed94,95
data GExprGroupGExprGroup97,98
    = GEGSingle GEGSingle98,99
    = GEGSingle { singleType singleType98,99
    | GEGUnitGEGUnit99,100
    | GEGTuple GEGTuple100,101
    | GEGStruct GEGStruct101,102
    | GEGSum GEGSum102,103
ptrGTyp ptrGTyp105,106
wordGTyp wordGTyp106,107
globalMemNm globalMemNm107,108
globalMem globalMem108,109
getExprType getExprType110,111
graphGen graphGen116,117
graphDefinitions graphDefinitions126,127
graphDefinition graphDefinition129,130
graphTypeHelper graphTypeHelper141,142
graphHelper graphHelper150,151
graphType graphType161,162
mkUpds mkUpds183,184
mkBasicVs mkBasicVs191,192
mkBasic mkBasic197,198
mystery mystery200,201
graph graph203,204
getFieldVariable getFieldVariable319,320
getFieldVariables getFieldVariables325,326
getFieldAddresses getFieldAddresses340,341
getFieldAccesses getFieldAccesses357,358
mkFieldOffset mkFieldOffset362,363
mkOffset mkOffset370,371
gexprGroupTypeWidth gexprGroupTypeWidth375,376
getFieldsFromConcat getFieldsFromConcat396,397
atom atom405,406
atomCheck atomCheck510,511
atomNoUpds atomNoUpds519,520
singleAtom singleAtom526,527
zeroField zeroField533,534
zeroFields zeroFields538,539
sumFieldsMash sumFieldsMash546,547
addGraphNode addGraphNode555,556
prettyFailedTypeFunction prettyFailedTypeFunction558,559
prettyFunctionGraph prettyFunctionGraph562,563
prettyFailedFunction prettyFailedFunction568,569
failureCount failureCount575,576
prettyFailureReport prettyFailureReport580,581
prettyGraph prettyGraph590,591
prettyNode prettyNode594,595
prettyFName prettyFName599,600
prettyList prettyList602,603
prettyVars prettyVars605,606
prettyVar prettyVar608,609
prettyNN prettyNN611,612
prettyBindings prettyBindings616,617
prettyTy prettyTy620,621
prettyE prettyE625,626
opConvert opConvert631,632
namePrefix namePrefix654,655
freshNames freshNames657,658

./src/Cogent/Isabelle/CorresProof.hs,538
module Cogent.Isabelle.CorresProof Cogent.Isabelle.CorresProof10,11
corresProof corresProof24,25
imports imports37,38
sanityCheck sanityCheck45,46
setupFunctionValRel setupFunctionValRel52,53
context context90,91
ttMap ttMap133,134
categorise categorise141,142
nameField nameField153,154
hofHints hofHints173,174
checkHofHints checkHofHints187,188
cogentMainTree cogentMainTree206,207
xiN xiN230,231
changeType changeType243,244
corresThm corresThm259,260
runProof runProof274,275
resolve resolve294,295

./src/Cogent/Isabelle/NormalProof.hs,351
module Cogent.Isabelle.NormalProof Cogent.Isabelle.NormalProof12,13
normalProof normalProof30,31
imports imports41,42
getInlinedShallowPromotes getInlinedShallowPromotes65,66
promoteRules promoteRules77,78
getShallowCases getShallowCases98,99
anormalCaseRules anormalCaseRules107,108
genDesugarNormalProof genDesugarNormalProof144,145

./src/Cogent/Isabelle/ShallowTable.hs,539
module Cogent.Isabelle.ShallowTable Cogent.Isabelle.ShallowTable17,18
data TypeStr TypeStr38,39
data TypeStr = RecordStr RecordStr38,39
             | VariantStr VariantStr39,40
instance Show Show TypeStr42,43
  show show43,44
toTypeStr toTypeStr47,48
getStrlType getStrlType65,66
type ST ST86,87
st st89,90
stDefinitions stDefinitions92,93
stDefinition stDefinition96,97
stExpr stExpr102,103
stType stType128,129
findIndex findIndex135,136
lookupTypeStr lookupTypeStr138,139
printTable printTable142,143

./src/Cogent/Isabelle/Deep.hs,1093
module Cogent.Isabelle.Deep Cogent.Isabelle.Deep16,17
deepIndex deepIndex40,41
deepSigil deepSigil45,46
type TypeAbbrevs TypeAbbrevs50,51
deepVariantState deepVariantState52,53
deepRecordState deepRecordState56,57
deepTypeInner deepTypeInner60,61
mkAbbrevNm mkAbbrevNm75,76
mkAbbrevId mkAbbrevId78,79
deepType deepType81,82
deepPrimType deepPrimType88,89
deepNumType deepNumType95,96
deepILit deepILit102,103
deepPrimOp deepPrimOp109,110
deepExpr deepExpr131,132
deepKind deepKind193,194
deepPolyType deepPolyType196,197
imports imports200,201
deepDefinition deepDefinition203,204
deepDefinitions deepDefinitions227,228
scanAggregates scanAggregates247,248
addTypeAbbrev addTypeAbbrev255,256
getDefTypeAbbrevs getDefTypeAbbrevs262,263
getTypeAbbrevs getTypeAbbrevs267,268
deepTypeAbbrev deepTypeAbbrev270,271
typeAbbrevBucketName typeAbbrevBucketName276,277
typeAbbrevDefsLemma typeAbbrevDefsLemma278,279
deepTypeAbbrevs deepTypeAbbrevs286,287
deepDefinitionsAbb deepDefinitionsAbb291,292
deepFile deepFile295,296
deep deep298,299

./src/Cogent/Isabelle/ProofGen.hs,4540
module Cogent.Isabelle.ProofGen Cogent.Isabelle.ProofGen18,19
import import35,36
type Xi Xi45,46
data EnvExpr EnvExpr46,47
data EnvExpr t v a = EE EE46,47
data EnvExpr t v a = EE { eexprType eexprType46,47
                        , eexprExpr eexprExpr47,48
                        , eexprEnv eexprEnv48,49
instance Functor Functor (EnvExpr t v)51,52
  fmap fmap52,53
instance Prec Prec (EnvExpr t v a)54,55
  prec prec55,56
instance (P(Pretty a) => Pretty (EnvExpr t v a)57,58
  pretty pretty58,59
data MLOption MLOption60,61
data MLOption a = SOME SOME60,61
                | NONENONE61,62
data Thm Thm64,65
data Thm = Thm Thm64,65
         | NthThm NthThm65,66
         | ThmInst ThmInst66,67
data Thms Thms68,69
data Thms = Thms Thms68,69
          | ThmList ThmList69,70
data Tactic Tactic71,72
data Tactic = RuleTac RuleTac71,72
            | Simplifier Simplifier72,73
            | SimpSolve SimpSolve73,74
            | Force Force74,75
            | WeakeningTac WeakeningTac75,76
            | SplitsTac SplitsTac76,77
            | SubtypingTac SubtypingTac77,78
instance Show Show Thm79,80
  show show80,81
instance Show Show Thms85,86
  show show86,87
instance Show Show Tactic89,90
  show show90,91
rule rule98,99
rule_tac rule_tac99,100
simp simp101,102
simp_add simp_add102,103
simp_del simp_del103,104
simp_add_del simp_add_del104,105
simp_solve simp_solve106,107
simp_solve_add simp_solve_add107,108
simp_solve_del simp_solve_del108,109
simp_solve_add_del simp_solve_add_del109,110
force_simp force_simp111,112
data Hints Hints113,114
data Hints = KindingTacs KindingTacs113,114
           | TTSplitBangTacs TTSplitBangTacs114,115
           | TypingTacs TypingTacs115,116
data Type'Type'119,120
  = TVar' TVar'120,121
  | TVarBang' TVarBang'121,122
  | TCon' TCon'122,123
  | TFun' TFun'123,124
  | TPrim' TPrim'124,125
  | TString'TString'125,126
  | TSum' TSum'126,127
  | TProduct' TProduct'127,128
  | TRecord' TRecord'128,129
  | TUnit'TUnit'129,130
deepType' deepType'132,133
stripType stripType144,145
cacheWeakeningProofs cacheWeakeningProofs160,161
typingSubproofPrefix typingSubproofPrefix162,163
type SubproofId SubproofId163,164
type ProofCache ProofCache164,165
data TypingSubproofs TypingSubproofs167,168
data TypingSubproofs = TypingSubproofsTypingSubproofs167,168
                       { _genId _genId168,169
                       , _subproofKinding _subproofKinding169,170
                       , _subproofAllKindCorrect _subproofAllKindCorrect170,171
                       , _subproofSplits _subproofSplits171,172
                       , _subproofWeakens _subproofWeakens172,173
                       , _subproofWellformed _subproofWellformed173,174
                       , _tsTypeAbbrevs _tsTypeAbbrevs174,175
                       , _nameMod _nameMod175,176
thmTypeAbbrev thmTypeAbbrev179,180
typingSubproofsInit typingSubproofsInit188,189
newSubproofId newSubproofId191,192
tacSequence tacSequence197,198
hintListSequence hintListSequence200,201
kindingHint kindingHint203,204
wellformedHint wellformedHint206,207
follow_tt follow_tt209,210
proofSteps proofSteps218,219
ttyping ttyping222,223
typingWrapper typingWrapper260,261
allVars allVars269,270
typing typing274,275
typingAll typingAll472,473
subtyping subtyping486,487
subtyping' subtyping'489,490
subtyping'' subtyping''490,491
subtyping' subtyping'492,493
subtyping'' subtyping''500,501
kinding kinding549,550
kindingRaw kindingRaw555,556
kinding' kinding'572,573
kindingAll kindingAll602,603
kindingRecord kindingRecord605,606
kindingVariant kindingVariant608,609
allKindCorrect allKindCorrect611,612
allKindCorrect' allKindCorrect'629,630
splits splits635,636
splitsHint splitsHint638,639
splitHint splitHint647,648
ttsplit_bang ttsplit_bang654,655
distinct distinct670,671
wellformed wellformed673,674
wellformedRaw wellformedRaw679,680
wellformedAll wellformedAll696,697
consumed consumed701,702
weakens weakens705,706
breakConj breakConj735,736
takeTaken takeTaken739,740
singleton singleton743,744
mostGeneralKind mostGeneralKind746,747
kindRule kindRule758,759
envOf envOf770,771
typeOf typeOf771,772
peel peel773,774
peel2 peel2776,777
(<(<|>)778,779
cleared cleared787,788
deepKindStr deepKindStr793,794
deepMaybe deepMaybe795,796
deepMaybeTy deepMaybeTy799,800

./quickcheck/CogentMonad.hs,130
type CogentMonad CogentMonad15,16
flatten flatten17,18
image image20,21
select select23,24
alternative alternative26,27

./quickcheck/Corres.hs,115
module Corres Corres1,2
corres corres6,7
corresM corresM9,10
corres' corres'12,13
corresM' corresM'15,16

./quickcheck/Util.hs,1198
module Util Util6,7
newtype Flip Flip17,18
newtype Flip f (a :: a') (b :: b') = Flip { unflip unflip17,18
ffmap ffmap19,20
ttraverse ttraverse22,23
curry3 curry325,26
uncurry3 uncurry328,29
curry4 curry431,32
uncurry4 uncurry434,35
curry5 curry537,38
uncurry5 uncurry540,41
curry6 curry643,44
uncurry6 uncurry646,47
type Cu8 Cu850,51
type Cu16 Cu1651,52
type Cu32 Cu3252,53
type Cu64 Cu6453,54
newtype CSysState CSysState55,56
newtype CSysState = CSysState { dummy dummy55,56
instance Arbitrary Arbitrary CSysState57,58
  arbitrary arbitrary58,59
dummyCSysState dummyCSysState60,61
pDummyCSysState pDummyCSysState63,64
newtype Tag Tag66,67
newtype Ctag_t Ctag_t67,68
newtype FuncEnum FuncEnum69,70
newtype Cuntyped_func_enum Cuntyped_func_enum70,71
newtype Cunit_t Cunit_t72,73
newtype Cunit_t = Cunit_t { dummy dummy72,73
newtype Cbool_t Cbool_t73,74
newtype Cbool_t = Cbool_t { boolean boolean73,74
instance Arbitrary Arbitrary Cunit_t75,76
  arbitrary arbitrary76,77
instance Arbitrary Arbitrary Cbool_t78,79
  arbitrary arbitrary79,80
const_unit const_unit81,82
const_true const_true82,83
const_false const_false83,84

./examples/search/FFI.hsc,1485
module FFI FFI5,6
newtype CSysState CSysState16,17
newtype CSysState = CSysState { dummy dummy16,17
type CBuffer CBuffer17,18
type CCString CCString18,19
data Ct27 Ct2719,20
data Ct27 = Ct27 Ct2719,20
data Ct27 = Ct27 { p1 p119,20
data Ct27 = Ct27 { p1 :: Ptr CSysState, p2 p219,20
data Ct27 = Ct27 { p1 :: Ptr CSysState, p2 :: Ptr CBuffer, p3 p319,20
newtype Tag Tag21,22
newtype Ctag_t Ctag_t33,34
newtype Cunit_t Cunit_t34,35
newtype Cunit_t = Cunit_t { dummy dummy34,35
data Ct4 Ct435,36
data Ct4  = Ct4 Ct435,36
data Ct4  = Ct4  { len len35,36
data Ct4  = Ct4  { len :: CInt, key key35,36
data Ct28 Ct2836,37
data Ct28 = Ct28 Ct2836,37
data Ct28 = Ct28 { tag tag36,37
data Ct28 = Ct28 { tag :: Ctag_t, none none36,37
data Ct28 = Ct28 { tag :: Ctag_t, none :: Cunit_t, some some36,37
data Ct29 Ct2937,38
data Ct29 = Ct29 Ct2937,38
data Ct29 = Ct29 { p1 p137,38
data Ct29 = Ct29 { p1 :: Ptr CSysState, p2 p237,38
instance Storable Storable Ct2739,40
  sizeOf sizeOf40,41
  alignment alignment41,42
  peek peek42,43
  poke poke43,44
instance Storable Storable Ct448,49
  sizeOf sizeOf49,50
  alignment alignment50,51
  peek peek51,52
  poke poke52,53
instance Storable Storable Ct2854,55
  sizeOf sizeOf55,56
  alignment alignment56,57
  peek peek57,58
  poke poke58,59
instance Storable Storable Ct2963,64
  sizeOf sizeOf64,65
  alignment alignment65,66
  peek peek66,67
  poke poke67,68

./examples/search/Search.hs,1056
module Main Main12,13
spec_main spec_main34,35
main main39,40
bad_main bad_main46,47
buffer buffer55,56
buffer_1 buffer_163,64
pretty pretty65,66
keys keys67,68
bufGen bufGen87,88
goodBufGen goodBufGen90,91
badBufGen badBufGen97,98
keyGen keyGen99,100
prop_cogent_eq_haskell prop_cogent_eq_haskell106,107
prop_model_to_cogent prop_model_to_cogent116,117
prop_abs_to_model prop_abs_to_model126,127
alpha alpha135,136
abs_find_str abs_find_str145,146
cogent_find_str cogent_find_str154,155
spec_find_str spec_find_str178,179
spec_cmp_inc spec_cmp_inc181,182
spec_deserialise_Node spec_deserialise_Node188,189
spec_deserialise_U32 spec_deserialise_U32194,195
spec_deserialise_CString spec_deserialise_CString198,199
instance Functor Functor (V16 e)204,205
  fmap fmap205,206
instance Applicative Applicative (V16 e)208,209
  pure pure209,210
  Error Error210,211
  Success Success211,212
instance Monad Monad (V16 e)213,214
  return return214,215
  Error Error215,216
  Success Success216,217

./examples/search/Search_Shallow_Desugar.hs,5808
module Search_Shallow_Desugar Search_Shallow_Desugar15,16
import import18,19
word64Max word64Max26,27
word32Max word32Max29,30
type SysState SysState32,33
type CString CString34,35
type Buffer Buffer36,37
type WordArrayIndex WordArrayIndex38,39
type Seq64_bodyParam Seq64_bodyParam40,41
type Seq32_stepParam Seq32_stepParam42,43
type Seq32_simple_bodyParam Seq32_simple_bodyParam44,45
type Seq32_simple_body Seq32_simple_body46,47
type Seq32_bodyParam Seq32_bodyParam48,49
type Seq32SimpleParam Seq32SimpleParam50,51
type RR RR52,53
type R R54,55
type Result Result56,57
type Option Option58,59
type OptElemAO OptElemAO60,61
type OptElemA OptElemA62,63
type LoopResult LoopResult64,65
type LRR LRR66,67
type Seq32_body Seq32_body68,69
type Seq32Param Seq32Param70,71
type Seq32StepFParam Seq32StepFParam72,73
type Seq64_body Seq64_body74,75
type Seq64Param Seq64Param76,77
type Index Index78,79
type FreeF FreeF80,81
type FreeAccF FreeAccF82,83
type ErrCode ErrCode84,85
type ElemB ElemB86,87
type ElemAO ElemAO88,89
type ElemA ElemA90,91
type Node Node92,93
type ArrB ArrB94,95
type ArrA ArrA96,97
u8_to_u64 u8_to_u6498,99
u8_to_u32 u8_to_u32101,102
u8_to_u16 u8_to_u16104,105
u64_to_u32 u64_to_u32107,108
u64_to_u16 u64_to_u16110,111
u32_to_u8 u32_to_u8113,114
u32_to_u64 u32_to_u64116,117
u32_to_u16 u32_to_u16119,120
u16_to_u8 u16_to_u8122,123
u16_to_u32 u16_to_u32125,126
random_u32 random_u32128,129
cogent_log2 cogent_log2131,132
seq32_simple seq32_simple134,135
seq32 seq32137,138
seq32_rev seq32_rev146,147
seq32_stepf seq32_stepf149,150
seq64 seq64152,153
free_Node free_Node155,156
malloc_Node malloc_Node158,159
array_print array_print161,162
free_CString free_CString164,165
string_cmp string_cmp167,168
deserialise_CString deserialise_CString170,171
deserialise_U32 deserialise_U32179,180
u16_to_u64 u16_to_u64184,185
to_u64 to_u64187,188
to_u32 to_u32190,191
to_u16 to_u16193,194
min_u64 min_u64196,197
min_u32 min_u32205,206
in_range_u32 in_range_u32214,215
cogent_low_16_bits cogent_low_16_bits226,227
cogent_high_16_bits cogent_high_16_bits229,230
align64 align64232,233
align32 align32241,242
safe_add32 safe_add32250,251
safe_add64 safe_add64259,260
safe_sub32 safe_sub32268,269
safe_sub64 safe_sub64277,278
deserialise_Node deserialise_Node286,287
cmp_inc cmp_inc334,335
find_str find_str379,380
data R0 R0416,417
data R0 t1 t2 t3 = R0{acc R0{acc416,417
data R0 t1 t2 t3 = R0{acc :: t1, obsv obsv416,417
data R0 t1 t2 t3 = R0{acc :: t1, obsv :: t2, idx idx416,417
data R1 R1418,419
data R1 t1 t2 = R1{arr R1{arr418,419
data R1 t1 t2 = R1{arr :: t1, acc acc418,419
data R2 R2420,421
data R2 t1 t2 = R2{arr R2{arr420,421
data R2 t1 t2 = R2{arr :: t1, rbrk rbrk420,421
data R3 R3422,423
data R3 t1 t2 = R3{elem R3{elem422,423
data R3 t1 t2 = R3{elem :: t1, acc acc422,423
data R4 R4424,425
data R4 t1 t2 t3 = R4{elem R4{elem424,425
data R4 t1 t2 t3 = R4{elem :: t1, acc acc424,425
data R4 t1 t2 t3 = R4{elem :: t1, acc :: t2, obsv obsv424,425
data R5 R5426,427
data R5 t1 t2 = R5{elem R5{elem426,427
data R5 t1 t2 = R5{elem :: t1, rbrk rbrk426,427
data R6 R6428,429
data R6 t1 t2 t3 t4 t5 = R6{frm R6{frm428,429
data R6 t1 t2 t3 t4 t5 = R6{frm :: t1, to to428,429
data R6 t1 t2 t3 t4 t5 = R6{frm :: t1, to :: t2, step step428,429
data R6 t1 t2 t3 t4 t5 = R6{frm :: t1, to :: t2, step :: t3, f f428,429
data R6 t1 t2 t3 t4 t5 = R6{frm :: t1, to :: t2, step :: t3, f :: t4, acc acc428,429
data R7 R7430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm R7{frm430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm :: t1, to to430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm :: t1, to :: t2, step step430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm :: t1, to :: t2, step :: t3, f f430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm :: t1, to :: t2, step :: t3, f :: t4, acc acc430,431
data R7 t1 t2 t3 t4 t5 t6 = R7{frm :: t1, to :: t2, step :: t3, f :: t4, acc :: t5, obsv obsv430,431
data R8 R8432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm R8{frm432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm :: t1, to to432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm :: t1, to :: t2, stepf stepf432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm :: t1, to :: t2, stepf :: t3, f f432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm :: t1, to :: t2, stepf :: t3, f :: t4, acc acc432,433
data R8 t1 t2 t3 t4 t5 t6 = R8{frm :: t1, to :: t2, stepf :: t3, f :: t4, acc :: t5, obsv obsv432,433
data R9 R9434,435
data R9 t1 t2 = R9{len R9{len434,435
data R9 t1 t2 = R9{len :: t1, key key434,435
data R10 R10436,437
data R10 t1 t2 = R10{oelem R10{oelem436,437
data R10 t1 t2 = R10{oelem :: t1, acc acc436,437
data R11 R11438,439
data R11 t1 t2 t3 = R11{oelem R11{oelem438,439
data R11 t1 t2 t3 = R11{oelem :: t1, acc acc438,439
data R11 t1 t2 t3 = R11{oelem :: t1, acc :: t2, obsv obsv438,439
data R12 R12440,441
data R12 t1 t2 = R12{p1 R12{p1440,441
data R12 t1 t2 = R12{p1 :: t1, p2 p2440,441
data R13 R13442,443
data R13 t1 t2 t3 = R13{p1 R13{p1442,443
data R13 t1 t2 t3 = R13{p1 :: t1, p2 p2442,443
data R13 t1 t2 t3 = R13{p1 :: t1, p2 :: t2, p3 p3442,443
data R14 R14444,445
data R14 t1 t2 t3 t4 = R14{p1 R14{p1444,445
data R14 t1 t2 t3 t4 = R14{p1 :: t1, p2 p2444,445
data R14 t1 t2 t3 t4 = R14{p1 :: t1, p2 :: t2, p3 p3444,445
data R14 t1 t2 t3 t4 = R14{p1 :: t1, p2 :: t2, p3 :: t3, p4 p4444,445
data V15 V15446,447
data V15 t1 t2 = Break Break446,447
               | Iterate Iterate447,448
data V16 V16449,450
data V16 t1 t2 = Error Error449,450
               | Success Success450,451
data V17 V17452,453
data V17 t1 t2 = None None452,453
               | Some Some453,454

./examples/search/Util.hs,227
module Util Util0,1
data EndianEndian13,14
  = LittleEndian LittleEndian14,15
  | BigEndian BigEndian15,16
  | PDPEndian PDPEndian16,17
endian endian20,21
readWord32 readWord3234,35
buildWord32 buildWord3255,56
