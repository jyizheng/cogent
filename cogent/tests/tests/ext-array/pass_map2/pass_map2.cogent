type R  = { f1 : U8 , f2 : Bool }

type A1 = R[4]
type A2 = U8[3]

foo : {arrs : (A1, A2), b : Bool} -> {arrs : (A1, A2), b : Bool}
foo arg {arrs = (a1,a2)} =
  let (a1', a2') = map2 (\v1 v2 => if arg.b && v1.f2 !arg !v1 
                                     then (v1 {f1 = 42}, v2)
                                     else (v1, 50)) a1 a2
   in arg {arrs=(a1',a2')}

