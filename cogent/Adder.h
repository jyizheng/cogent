// This file is generated by Cogent

#ifndef ADDER_H__
#define ADDER_H__

#include <cogent-defns.h>

enum {
    LET_TRUE = 1,
} ;
enum {
    LETBANG_TRUE = 1,
} ;
enum tag_t {
    TAG_ENUM_Error,
    TAG_ENUM_Success,
} ;
typedef enum tag_t tag_t;
enum untyped_func_enum {
    FUN_ENUM_add,
} ;
typedef enum untyped_func_enum untyped_func_enum;
typedef untyped_func_enum t3;
#define FUN_DISP_MACRO_dispatch_t3(a1, a2, a3)\
{\
    {\
        a1 = add(a3);\
    }\
}
struct t1 {
    u32 p1;
    u32 p2;
} ;
typedef struct t1 t1;
struct t2 {
    tag_t tag;
    unit_t Error;
    u32 Success;
} ;
typedef struct t2 t2;
static inline t2 add(t1);
static inline t2 dispatch_t3(untyped_func_enum a2, t1 a3)
{
    return add(a3);
}
typedef t1 add_arg;
typedef t2 add_ret;
#endif


